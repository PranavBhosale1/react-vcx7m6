{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as joint from '@joint/core'; // Updated import\nimport { roadmapData as initialRoadmapData } from '../data/roadmapData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  const paperContainer = useRef(null);\n  const graph = useRef(null);\n  const paper = useRef(null);\n  const [roadmapData, setRoadmapData] = useState(initialRoadmapData);\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n  useEffect(() => {\n    graph.current = new joint.dia.Graph();\n    paper.current = new joint.dia.Paper({\n      el: paperContainer.current,\n      model: graph.current,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      interactive: true\n    });\n    renderDiagram();\n    calculateCompletionPercentage();\n  }, []);\n  const renderDiagram = () => {\n    graph.current.clear();\n    const elements = [];\n    const links = [];\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100, 100 + subjectIndex * 150);\n      subjectElement.resize(100, 40);\n      subjectElement.attr({\n        body: {\n          fill: 'lightblue'\n        },\n        label: {\n          text: subject.name,\n          fill: 'black'\n        }\n      });\n      subjectElement.addTo(graph.current);\n      elements.push(subjectElement);\n      subject.topics.forEach((topic, topicIndex) => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(300, 100 + subjectIndex * 150 + topicIndex * 60);\n        topicElement.resize(100, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? 'lightgreen' : 'lightcoral'\n          },\n          label: {\n            text: topic.name,\n            fill: 'black'\n          }\n        });\n        topicElement.addTo(graph.current);\n        elements.push(topicElement);\n        const link = new joint.shapes.standard.Link();\n        link.source(subjectElement);\n        link.target(topicElement);\n        link.addTo(graph.current);\n        links.push(link);\n        topicElement.on('element:pointerdown', () => handleTopicClick(topic.id));\n      });\n    });\n  };\n  const handleTopicClick = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      const topicToUpdate = subject.topics.find(t => t.id === topicId);\n      if (topicToUpdate) {\n        topicToUpdate.completed = !topicToUpdate.completed;\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    calculateCompletionPercentage();\n  };\n  const calculateCompletionPercentage = () => {\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.filter(topic => topic.completed).length;\n    }, 0);\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.length;\n    }, 0);\n    setCompletionPercentage(completedTopics / totalTopics * 100);\n  };\n  useEffect(() => {\n    if (graph.current) {\n      renderDiagram();\n    }\n  }, [roadmapData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paperContainer,\n      style: {\n        border: '1px solid black',\n        width: '800px',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Roadmap Completion: \", completionPercentage.toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"VU2FerbgcOzcQPJt1O77ILikqxg=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","joint","roadmapData","initialRoadmapData","jsxDEV","_jsxDEV","RoadmapView","_s","paperContainer","graph","paper","setRoadmapData","completionPercentage","setCompletionPercentage","current","dia","Graph","Paper","el","model","width","height","gridSize","interactive","renderDiagram","calculateCompletionPercentage","clear","elements","links","subjects","forEach","subject","subjectIndex","subjectElement","shapes","standard","Rectangle","position","resize","attr","body","fill","label","text","name","addTo","push","topics","topic","topicIndex","topicElement","completed","link","Link","source","target","on","handleTopicClick","id","topicId","updatedRoadmapData","topicToUpdate","find","t","completedTopics","reduce","total","filter","length","totalTopics","children","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["D:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport * as joint from '@joint/core'; // Updated import\r\nimport { roadmapData as initialRoadmapData } from '../data/roadmapData';\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const graph = useRef(null);\r\n  const paper = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState(initialRoadmapData);\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    graph.current = new joint.dia.Graph();\r\n    paper.current = new joint.dia.Paper({\r\n      el: paperContainer.current,\r\n      model: graph.current,\r\n      width: 800,\r\n      height: 600,\r\n      gridSize: 1,\r\n      interactive: true,\r\n    });\r\n\r\n    renderDiagram();\r\n    calculateCompletionPercentage();\r\n  }, []);\r\n\r\n  const renderDiagram = () => {\r\n    graph.current.clear();\r\n\r\n    const elements = [];\r\n    const links = [];\r\n\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100, 100 + subjectIndex * 150);\r\n      subjectElement.resize(100, 40);\r\n      subjectElement.attr({\r\n        body: { fill: 'lightblue' },\r\n        label: { text: subject.name, fill: 'black' },\r\n      });\r\n\r\n      subjectElement.addTo(graph.current);\r\n      elements.push(subjectElement);\r\n\r\n      subject.topics.forEach((topic, topicIndex) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(300, 100 + subjectIndex * 150 + topicIndex * 60);\r\n        topicElement.resize(100, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? 'lightgreen' : 'lightcoral' },\r\n          label: { text: topic.name, fill: 'black' },\r\n        });\r\n\r\n        topicElement.addTo(graph.current);\r\n        elements.push(topicElement);\r\n\r\n        const link = new joint.shapes.standard.Link();\r\n        link.source(subjectElement);\r\n        link.target(topicElement);\r\n        link.addTo(graph.current);\r\n        links.push(link);\r\n\r\n        topicElement.on('element:pointerdown', () => handleTopicClick(topic.id));\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleTopicClick = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n      if (topicToUpdate) {\r\n        topicToUpdate.completed = !topicToUpdate.completed;\r\n      }\r\n    });\r\n\r\n    setRoadmapData(updatedRoadmapData);\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  const calculateCompletionPercentage = () => {\r\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.filter(topic => topic.completed).length;\r\n    }, 0);\r\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.length;\r\n    }, 0);\r\n\r\n    setCompletionPercentage((completedTopics / totalTopics) * 100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graph.current) {\r\n      renderDiagram();\r\n    }\r\n  }, [roadmapData]);\r\n\r\n  return (\r\n    <div>\r\n      <div ref={paperContainer} style={{ border: '1px solid black', width: '800px', height: '600px' }} />\r\n      <p>Roadmap Completion: {completionPercentage.toFixed(2)}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}