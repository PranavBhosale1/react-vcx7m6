{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as joint from '@joint/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  var _roadmapData$subjects;\n  const paperContainer = useRef(null);\n  const graph = useRef(null);\n  const [roadmapData, setRoadmapData] = useState({\n    subjects: []\n  });\n  const [newSubject, setNewSubject] = useState('');\n  const [newTopic, setNewTopic] = useState('');\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n  useEffect(() => {\n    // Load the roadmap data from local storage\n    const storedData = localStorage.getItem('roadmapData');\n    if (storedData) {\n      setRoadmapData(JSON.parse(storedData));\n    }\n\n    // Initialize the graph\n    graph.current = new joint.dia.Graph();\n    const paper = new joint.dia.Paper({\n      el: paperContainer.current,\n      model: graph.current,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      interactive: {\n        elementMove: false\n      } // Disable dragging\n    });\n    renderDiagram();\n    calculateCompletionPercentage();\n    return () => {\n      graph.current.off('element:pointerdown'); // Clean up\n    };\n  }, []);\n\n  // Function to save roadmap data to local storage\n  const saveToLocalStorage = data => {\n    localStorage.setItem('roadmapData', JSON.stringify(data));\n  };\n  const renderDiagram = () => {\n    graph.current.clear();\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100, 100 + subjectIndex * 150);\n      subjectElement.resize(100, 40);\n      subjectElement.attr({\n        body: {\n          fill: 'lightblue'\n        },\n        label: {\n          text: subject.name,\n          fill: 'black'\n        }\n      });\n      subjectElement.attr('element', {\n        draggable: false\n      });\n      subjectElement.addTo(graph.current);\n      let currentY = 150 + subjectIndex * 150;\n      subject.topics.forEach((topic, topicIndex) => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(300, currentY);\n        topicElement.resize(100, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? 'lightgreen' : 'lightcoral'\n          },\n          label: {\n            text: topic.name,\n            fill: 'black'\n          }\n        });\n        topicElement.addTo(graph.current);\n        topicElement.attr('element', {\n          draggable: false\n        });\n        const link = new joint.shapes.standard.Link();\n        if (topicIndex === 0) {\n          // Connect first topic to the subject\n          link.source(subjectElement);\n        } else {\n          // Connect subsequent topics to the previous topic\n          const previousTopicElement = graph.current.getCell(roadmapData.subjects[subjectIndex].topics[topicIndex - 1].id);\n          link.source(previousTopicElement);\n        }\n        link.target(topicElement);\n        link.addTo(graph.current);\n        currentY += 60; // Space between topics\n      });\n    });\n  };\n  const calculateCompletionPercentage = () => {\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.filter(topic => topic.completed).length;\n    }, 0);\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.length;\n    }, 0);\n    setCompletionPercentage(completedTopics / totalTopics * 100 || 0);\n  };\n  const addSubject = () => {\n    if (newSubject.trim() !== '') {\n      const updatedRoadmapData = {\n        ...roadmapData,\n        subjects: [...roadmapData.subjects, {\n          id: uuidv4(),\n          name: newSubject,\n          topics: []\n        }]\n      };\n      setRoadmapData(updatedRoadmapData);\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\n      setNewSubject('');\n    } else {\n      alert('Please enter a subject name.');\n    }\n  };\n  const deleteSubject = subjectId => {\n    const updatedRoadmapData = {\n      ...roadmapData,\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId)\n    };\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    setSelectedSubjectId(''); // Clear the selected subject\n  };\n  const addTopic = () => {\n    if (newTopic.trim() !== '' && selectedSubjectId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      const subjectToUpdate = updatedRoadmapData.subjects.find(subject => subject.id === selectedSubjectId);\n      if (subjectToUpdate) {\n        const topicId = uuidv4();\n        subjectToUpdate.topics.push({\n          id: topicId,\n          name: newTopic,\n          completed: false\n        });\n        setRoadmapData(updatedRoadmapData);\n        saveToLocalStorage(updatedRoadmapData); // Save to local storage\n        setNewTopic('');\n        renderDiagram(); // Re-render diagram to reflect the changes\n      } else {\n        alert('Subject not found.');\n      }\n    } else {\n      alert('Please enter a topic name and select a subject.');\n    }\n  };\n  const markAsCompleted = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          topicToUpdate.completed = !topicToUpdate.completed;\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    calculateCompletionPercentage();\n  };\n  const editTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\n          if (newName && newName.trim() !== '') {\n            topicToUpdate.name = newName.trim();\n          }\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n  };\n  const deleteTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        subject.topics = subject.topics.filter(t => t.id !== topicId);\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    calculateCompletionPercentage();\n  };\n  useEffect(() => {\n    if (graph.current) {\n      renderDiagram();\n    }\n  }, [roadmapData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubject,\n        onChange: e => setNewSubject(e.target.value),\n        placeholder: \"Subject Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSubject,\n        children: \"Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [subject.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteSubject(subject.id),\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, subject.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubjectId(e.target.value),\n        value: selectedSubjectId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subject.id,\n          children: subject.name\n        }, subject.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTopic,\n        onChange: e => setNewTopic(e.target.value),\n        placeholder: \"Topic Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTopic,\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paperContainer,\n      style: {\n        border: '1px solid black',\n        width: '800px',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Manage Topics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), selectedSubjectId && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_roadmapData$subjects = roadmapData.subjects.find(subject => subject.id === selectedSubjectId)) === null || _roadmapData$subjects === void 0 ? void 0 : _roadmapData$subjects.topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textDecoration: topic.completed ? 'line-through' : 'none'\n            },\n            children: topic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => markAsCompleted(topic.id),\n              children: [\"Mark as \", topic.completed ? 'Incomplete' : 'Completed']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editTopic(topic.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTopic(topic.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this)]\n        }, topic.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), !selectedSubjectId && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select a subject to manage topics.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Overall Completion: \", completionPercentage.toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"YYiBufMuied5EDqcF3FwBmNPaSg=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","joint","v4","uuidv4","jsxDEV","_jsxDEV","RoadmapView","_s","_roadmapData$subjects","paperContainer","graph","roadmapData","setRoadmapData","subjects","newSubject","setNewSubject","newTopic","setNewTopic","selectedSubjectId","setSelectedSubjectId","completionPercentage","setCompletionPercentage","storedData","localStorage","getItem","JSON","parse","current","dia","Graph","paper","Paper","el","model","width","height","gridSize","interactive","elementMove","renderDiagram","calculateCompletionPercentage","off","saveToLocalStorage","data","setItem","stringify","clear","forEach","subject","subjectIndex","subjectElement","shapes","standard","Rectangle","position","resize","attr","body","fill","label","text","name","draggable","addTo","currentY","topics","topic","topicIndex","topicElement","completed","link","Link","source","previousTopicElement","getCell","id","target","completedTopics","reduce","total","filter","length","totalTopics","addSubject","trim","updatedRoadmapData","alert","deleteSubject","subjectId","addTopic","subjectToUpdate","find","topicId","push","markAsCompleted","topicToUpdate","t","editTopic","newName","prompt","deleteTopic","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","onClick","map","marginLeft","ref","border","marginBottom","textDecoration","toFixed","_c","$RefreshReg$"],"sources":["D:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport * as joint from '@joint/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const graph = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState({ subjects: [] });\r\n  const [newSubject, setNewSubject] = useState('');\r\n  const [newTopic, setNewTopic] = useState('');\r\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Load the roadmap data from local storage\r\n    const storedData = localStorage.getItem('roadmapData');\r\n    if (storedData) {\r\n      setRoadmapData(JSON.parse(storedData));\r\n    }\r\n\r\n    // Initialize the graph\r\n    graph.current = new joint.dia.Graph();\r\n    const paper = new joint.dia.Paper({\r\n      el: paperContainer.current,\r\n      model: graph.current,\r\n      width: 800,\r\n      height: 600,\r\n      gridSize: 1,\r\n      interactive: { elementMove: false }, // Disable dragging\r\n    });\r\n\r\n    renderDiagram();\r\n    calculateCompletionPercentage();\r\n\r\n    return () => {\r\n      graph.current.off('element:pointerdown'); // Clean up\r\n    };\r\n  }, []);\r\n\r\n  // Function to save roadmap data to local storage\r\n  const saveToLocalStorage = (data) => {\r\n    localStorage.setItem('roadmapData', JSON.stringify(data));\r\n  };\r\n\r\n  const renderDiagram = () => {\r\n    graph.current.clear();\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100, 100 + subjectIndex * 150);\r\n      subjectElement.resize(100, 40);\r\n      subjectElement.attr({\r\n        body: { fill: 'lightblue' },\r\n        label: { text: subject.name, fill: 'black' },\r\n      });\r\n\r\n      subjectElement.attr('element', { draggable: false });\r\n      subjectElement.addTo(graph.current);\r\n\r\n      let currentY = 150 + subjectIndex * 150;\r\n      subject.topics.forEach((topic, topicIndex) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(300, currentY);\r\n        topicElement.resize(100, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? 'lightgreen' : 'lightcoral' },\r\n          label: { text: topic.name, fill: 'black' },\r\n        });\r\n\r\n        topicElement.addTo(graph.current);\r\n        topicElement.attr('element', { draggable: false });\r\n\r\n        const link = new joint.shapes.standard.Link();\r\n        if (topicIndex === 0) {\r\n          // Connect first topic to the subject\r\n          link.source(subjectElement);\r\n        } else {\r\n          // Connect subsequent topics to the previous topic\r\n          const previousTopicElement = graph.current.getCell(roadmapData.subjects[subjectIndex].topics[topicIndex - 1].id);\r\n          link.source(previousTopicElement);\r\n        }\r\n        link.target(topicElement);\r\n        link.addTo(graph.current);\r\n\r\n        currentY += 60; // Space between topics\r\n      });\r\n    });\r\n  };\r\n\r\n  const calculateCompletionPercentage = () => {\r\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.filter(topic => topic.completed).length;\r\n    }, 0);\r\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.length;\r\n    }, 0);\r\n    setCompletionPercentage((completedTopics / totalTopics) * 100 || 0);\r\n  };\r\n\r\n  const addSubject = () => {\r\n    if (newSubject.trim() !== '') {\r\n      const updatedRoadmapData = {\r\n        ...roadmapData,\r\n        subjects: [\r\n          ...roadmapData.subjects,\r\n          {\r\n            id: uuidv4(),\r\n            name: newSubject,\r\n            topics: [],\r\n          },\r\n        ],\r\n      };\r\n      setRoadmapData(updatedRoadmapData);\r\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n      setNewSubject('');\r\n    } else {\r\n      alert('Please enter a subject name.');\r\n    }\r\n  };\r\n\r\n  const deleteSubject = (subjectId) => {\r\n    const updatedRoadmapData = {\r\n      ...roadmapData,\r\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId),\r\n    };\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    setSelectedSubjectId(''); // Clear the selected subject\r\n  };\r\n\r\n  const addTopic = () => {\r\n    if (newTopic.trim() !== '' && selectedSubjectId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      const subjectToUpdate = updatedRoadmapData.subjects.find(\r\n        (subject) => subject.id === selectedSubjectId\r\n      );\r\n      if (subjectToUpdate) {\r\n        const topicId = uuidv4();\r\n        subjectToUpdate.topics.push({\r\n          id: topicId,\r\n          name: newTopic,\r\n          completed: false,\r\n        });\r\n        setRoadmapData(updatedRoadmapData);\r\n        saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n        setNewTopic('');\r\n        renderDiagram(); // Re-render diagram to reflect the changes\r\n      } else {\r\n        alert('Subject not found.');\r\n      }\r\n    } else {\r\n      alert('Please enter a topic name and select a subject.');\r\n    }\r\n  };\r\n\r\n  const markAsCompleted = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          topicToUpdate.completed = !topicToUpdate.completed;\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  const editTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\r\n          if (newName && newName.trim() !== '') {\r\n            topicToUpdate.name = newName.trim();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n  };\r\n\r\n  const deleteTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        subject.topics = subject.topics.filter((t) => t.id !== topicId);\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graph.current) {\r\n      renderDiagram();\r\n    }\r\n  }, [roadmapData]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div>\r\n        <h3>Add New Subject</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newSubject}\r\n          onChange={(e) => setNewSubject(e.target.value)}\r\n          placeholder=\"Subject Name\"\r\n        />\r\n        <button onClick={addSubject}>Add Subject</button>\r\n        <h3>Existing Subjects</h3>\r\n        <ul>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <li key={subject.id}>\r\n              {subject.name}\r\n              <button onClick={() => deleteSubject(subject.id)} style={{ marginLeft: '10px' }}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Add New Topic</h3>\r\n        <select\r\n          onChange={(e) => setSelectedSubjectId(e.target.value)}\r\n          value={selectedSubjectId}\r\n        >\r\n          <option value=\"\">Select Subject</option>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <option key={subject.id} value={subject.id}>\r\n              {subject.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={newTopic}\r\n          onChange={(e) => setNewTopic(e.target.value)}\r\n          placeholder=\"Topic Name\"\r\n        />\r\n        <button onClick={addTopic}>Add Topic</button>\r\n      </div>\r\n\r\n      <div ref={paperContainer} style={{ border: '1px solid black', width: '800px', height: '600px' }} />\r\n      \r\n      {/* Right side for managing topics */}\r\n      <div style={{ marginLeft: '20px' }}>\r\n        <h3>Manage Topics</h3>\r\n        {selectedSubjectId && (\r\n          <ul>\r\n            {roadmapData.subjects.find((subject) => subject.id === selectedSubjectId)?.topics.map((topic) => (\r\n              <li key={topic.id} style={{ marginBottom: '10px' }}>\r\n                <span style={{ textDecoration: topic.completed ? 'line-through' : 'none' }}>\r\n                  {topic.name}\r\n                </span>\r\n                <div>\r\n                  <button onClick={() => markAsCompleted(topic.id)}>\r\n                    Mark as {topic.completed ? 'Incomplete' : 'Completed'}\r\n                  </button>\r\n                  <button onClick={() => editTopic(topic.id)}>Edit</button>\r\n                  <button onClick={() => deleteTopic(topic.id)}>Delete</button>\r\n                </div>\r\n              </li>\r\n            ))} \r\n          </ul>\r\n        )}\r\n        {!selectedSubjectId && <p>Please select a subject to manage topics.</p>}\r\n      </div>\r\n\r\n      <p>Overall Completion: {completionPercentage.toFixed(2)}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}