{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as joint from '@joint/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport './RoadmapView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  var _roadmapData$subjects;\n  const paperContainer = useRef(null);\n  const graph = useRef(null);\n  const [roadmapData, setRoadmapData] = useState(() => {\n    const savedData = localStorage.getItem('roadmapData');\n    return savedData ? JSON.parse(savedData) : {\n      subjects: []\n    };\n  });\n  const [newSubject, setNewSubject] = useState('');\n  const [newTopic, setNewTopic] = useState('');\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n  const [file, setFile] = useState(null); // State for file upload\n\n  useEffect(() => {\n    graph.current = new joint.dia.Graph();\n    const paper = new joint.dia.Paper({\n      el: paperContainer.current,\n      model: graph.current,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      interactive: {\n        elementMove: false\n      }\n    });\n    renderDiagram();\n    calculateCompletionPercentage();\n    return () => {\n      graph.current.off('element:pointerdown');\n    };\n  }, []);\n  const renderDiagram = () => {\n    graph.current.clear();\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100 + subjectIndex * 200, 50);\n      subjectElement.resize(150, 50);\n      subjectElement.attr({\n        body: {\n          fill: 'url(#gradient-subject)',\n          stroke: '#0056b3',\n          strokeWidth: 2,\n          rx: 15,\n          ry: 15\n        },\n        // Rounded corners\n        label: {\n          text: subject.name,\n          fill: 'white',\n          fontSize: 14\n        }\n      });\n      subjectElement.addTo(graph.current);\n      let currentY = 150;\n      subject.topics.forEach(topic => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(100 + subjectIndex * 200, currentY);\n        topicElement.resize(120, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? 'url(#gradient-completed)' : 'url(#gradient-incomplete)',\n            stroke: '#0056b3',\n            strokeWidth: 2,\n            rx: 10,\n            ry: 10\n          },\n          // Rounded corners\n          label: {\n            text: topic.name,\n            fill: 'white',\n            fontSize: 12\n          }\n        });\n        topicElement.addTo(graph.current);\n        const link = new joint.shapes.standard.Link();\n        link.source(subjectElement);\n        link.target(topicElement);\n        link.addTo(graph.current);\n        link.attr({\n          line: {\n            stroke: topic.completed ? '#28a745' : '#dc3545',\n            strokeWidth: 3,\n            targetMarker: {\n              type: 'arrow',\n              width: 10,\n              height: 10\n            }\n          }\n        });\n        link.set('router', {\n          name: 'manhattan',\n          args: {\n            padding: 10\n          }\n        });\n        currentY += 60;\n      });\n    });\n  };\n  const calculateCompletionPercentage = () => {\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.filter(topic => topic.completed).length;\n    }, 0);\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.length;\n    }, 0);\n    setCompletionPercentage(completedTopics / totalTopics * 100 || 0);\n  };\n  const addSubject = () => {\n    if (newSubject.trim() !== '') {\n      const updatedRoadmapData = {\n        ...roadmapData,\n        subjects: [...roadmapData.subjects, {\n          id: uuidv4(),\n          name: newSubject,\n          topics: []\n        }]\n      };\n      setRoadmapData(updatedRoadmapData);\n      setNewSubject('');\n      localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\n    } else {\n      alert('Please enter a subject name.');\n    }\n  };\n  const deleteSubject = subjectId => {\n    const updatedRoadmapData = {\n      ...roadmapData,\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId)\n    };\n    setRoadmapData(updatedRoadmapData);\n    localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\n    setSelectedSubjectId('');\n  };\n  const addTopic = () => {\n    if (newTopic.trim() !== '' && selectedSubjectId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      const subjectToUpdate = updatedRoadmapData.subjects.find(subject => subject.id === selectedSubjectId);\n      if (subjectToUpdate) {\n        const topicId = uuidv4();\n        subjectToUpdate.topics.push({\n          id: topicId,\n          name: newTopic,\n          completed: false,\n          attachments: [] // Initialize attachments array\n        });\n        setRoadmapData(updatedRoadmapData);\n        setNewTopic('');\n        renderDiagram();\n        localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\n      } else {\n        alert('Subject not found.');\n      }\n    } else {\n      alert('Please enter a topic name and select a subject.');\n    }\n  };\n  const markAsCompleted = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          topicToUpdate.completed = !topicToUpdate.completed;\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    calculateCompletionPercentage();\n    localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\n  };\n  const editTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\n          if (newName && newName.trim() !== '') {\n            topicToUpdate.name = newName.trim();\n          }\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\n  };\n  const deleteTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        subject.topics = subject.topics.filter(t => t.id !== topicId);\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    calculateCompletionPercentage();\n    localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = topicId => {\n    if (file) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      updatedRoadmapData.subjects.forEach(subject => {\n        if (subject.id === selectedSubjectId) {\n          const topicToUpdate = subject.topics.find(t => t.id === topicId);\n          if (topicToUpdate) {\n            const newAttachment = {\n              name: file.name,\n              url: URL.createObjectURL(file) // Create a URL for the uploaded file\n            };\n            topicToUpdate.attachments.push(newAttachment); // Add attachment to the topic\n          }\n        }\n      });\n      setRoadmapData(updatedRoadmapData);\n      setFile(null); // Reset the file input\n      localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\n    }\n  };\n  const removeAttachment = (topicId, index) => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          topicToUpdate.attachments.splice(index, 1); // Remove attachment\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\n  };\n  useEffect(() => {\n    if (graph.current) {\n      renderDiagram();\n    }\n  }, [roadmapData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roadmap-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subject-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubject,\n        onChange: e => setNewSubject(e.target.value),\n        placeholder: \"Enter subject name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSubject,\n        children: \"Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [subject.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteSubject(subject.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedSubjectId(subject.id),\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, subject.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topic-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTopic,\n        onChange: e => setNewTopic(e.target.value),\n        placeholder: \"Enter topic name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTopic,\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Topics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), selectedSubjectId && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_roadmapData$subjects = roadmapData.subjects.find(subject => subject.id === selectedSubjectId)) === null || _roadmapData$subjects === void 0 ? void 0 : _roadmapData$subjects.topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [topic.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => markAsCompleted(topic.id),\n            children: topic.completed ? 'Undo' : 'Complete'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editTopic(topic.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTopic(topic.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpload(topic.id),\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 19\n          }, this), topic.attachments.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: topic.attachments.map((attachment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: attachment.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: attachment.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeAttachment(topic.id, index),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 27\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 21\n          }, this)]\n        }, topic.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paper-container\",\n      ref: paperContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completion-bar\",\n      style: {\n        width: `${completionPercentage}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .completion-bar {\n            height: 5px;\n            background-color: #28a745;\n            transition: width 0.3s;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"B+l4mh4Jfm516WxCZgsz43A70Ag=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","joint","v4","uuidv4","jsxDEV","_jsxDEV","RoadmapView","_s","_roadmapData$subjects","paperContainer","graph","roadmapData","setRoadmapData","savedData","localStorage","getItem","JSON","parse","subjects","newSubject","setNewSubject","newTopic","setNewTopic","selectedSubjectId","setSelectedSubjectId","completionPercentage","setCompletionPercentage","file","setFile","current","dia","Graph","paper","Paper","el","model","width","height","gridSize","interactive","elementMove","renderDiagram","calculateCompletionPercentage","off","clear","forEach","subject","subjectIndex","subjectElement","shapes","standard","Rectangle","position","resize","attr","body","fill","stroke","strokeWidth","rx","ry","label","text","name","fontSize","addTo","currentY","topics","topic","topicElement","completed","link","Link","source","target","line","targetMarker","type","set","args","padding","completedTopics","reduce","total","filter","length","totalTopics","addSubject","trim","updatedRoadmapData","id","setItem","stringify","alert","deleteSubject","subjectId","addTopic","subjectToUpdate","find","topicId","push","attachments","markAsCompleted","topicToUpdate","t","editTopic","newName","prompt","deleteTopic","handleFileChange","e","files","handleUpload","newAttachment","url","URL","createObjectURL","removeAttachment","index","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","placeholder","onClick","map","attachment","href","rel","ref","style","_c","$RefreshReg$"],"sources":["C:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport * as joint from '@joint/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './RoadmapView.css';\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const graph = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState(() => {\r\n    const savedData = localStorage.getItem('roadmapData');\r\n    return savedData ? JSON.parse(savedData) : { subjects: [] };\r\n  });\r\n  const [newSubject, setNewSubject] = useState('');\r\n  const [newTopic, setNewTopic] = useState('');\r\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n  const [file, setFile] = useState(null); // State for file upload\r\n\r\n  useEffect(() => {\r\n    graph.current = new joint.dia.Graph();\r\n    const paper = new joint.dia.Paper({\r\n      el: paperContainer.current,\r\n      model: graph.current,\r\n      width: 800,\r\n      height: 600,\r\n      gridSize: 1,\r\n      interactive: { elementMove: false },\r\n    });\r\n\r\n    renderDiagram();\r\n    calculateCompletionPercentage();\r\n\r\n    return () => {\r\n      graph.current.off('element:pointerdown');\r\n    };\r\n  }, []);\r\n\r\n  const renderDiagram = () => {\r\n    graph.current.clear();\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100 + subjectIndex * 200, 50);\r\n      subjectElement.resize(150, 50);\r\n      subjectElement.attr({\r\n        body: { fill: 'url(#gradient-subject)', stroke: '#0056b3', strokeWidth: 2, rx: 15, ry: 15 }, // Rounded corners\r\n        label: { text: subject.name, fill: 'white', fontSize: 14 },\r\n      });\r\n\r\n      subjectElement.addTo(graph.current);\r\n\r\n      let currentY = 150;\r\n      subject.topics.forEach((topic) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(100 + subjectIndex * 200, currentY);\r\n        topicElement.resize(120, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? 'url(#gradient-completed)' : 'url(#gradient-incomplete)', stroke: '#0056b3', strokeWidth: 2, rx: 10, ry: 10 }, // Rounded corners\r\n          label: { text: topic.name, fill: 'white', fontSize: 12 },\r\n        });\r\n\r\n        topicElement.addTo(graph.current);\r\n\r\n        const link = new joint.shapes.standard.Link();\r\n        link.source(subjectElement);\r\n        link.target(topicElement);\r\n        link.addTo(graph.current);\r\n        link.attr({ line: { stroke: topic.completed ? '#28a745' : '#dc3545', strokeWidth: 3, targetMarker: { type: 'arrow', width: 10, height: 10 } } });\r\n        link.set('router', { name: 'manhattan', args: { padding: 10 } });\r\n\r\n        currentY += 60;\r\n      });\r\n    });\r\n  };\r\n\r\n  const calculateCompletionPercentage = () => {\r\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.filter(topic => topic.completed).length;\r\n    }, 0);\r\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.length;\r\n    }, 0);\r\n    setCompletionPercentage((completedTopics / totalTopics) * 100 || 0);\r\n  };\r\n\r\n  const addSubject = () => {\r\n    if (newSubject.trim() !== '') {\r\n      const updatedRoadmapData = {\r\n        ...roadmapData,\r\n        subjects: [\r\n          ...roadmapData.subjects,\r\n          {\r\n            id: uuidv4(),\r\n            name: newSubject,\r\n            topics: [],\r\n          },\r\n        ],\r\n      };\r\n      setRoadmapData(updatedRoadmapData);\r\n      setNewSubject('');\r\n      localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\r\n    } else {\r\n      alert('Please enter a subject name.');\r\n    }\r\n  };\r\n\r\n  const deleteSubject = (subjectId) => {\r\n    const updatedRoadmapData = {\r\n      ...roadmapData,\r\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId),\r\n    };\r\n    setRoadmapData(updatedRoadmapData);\r\n    localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\r\n    setSelectedSubjectId('');\r\n  };\r\n\r\n  const addTopic = () => {\r\n    if (newTopic.trim() !== '' && selectedSubjectId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      const subjectToUpdate = updatedRoadmapData.subjects.find(\r\n        (subject) => subject.id === selectedSubjectId\r\n      );\r\n      if (subjectToUpdate) {\r\n        const topicId = uuidv4();\r\n        subjectToUpdate.topics.push({\r\n          id: topicId,\r\n          name: newTopic,\r\n          completed: false,\r\n          attachments: [], // Initialize attachments array\r\n        });\r\n        setRoadmapData(updatedRoadmapData);\r\n        setNewTopic('');\r\n        renderDiagram();\r\n        localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\r\n      } else {\r\n        alert('Subject not found.');\r\n      }\r\n    } else {\r\n      alert('Please enter a topic name and select a subject.');\r\n    }\r\n  };\r\n\r\n  const markAsCompleted = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          topicToUpdate.completed = !topicToUpdate.completed;\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    calculateCompletionPercentage();\r\n    localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\r\n  };\r\n\r\n  const editTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\r\n          if (newName && newName.trim() !== '') {\r\n            topicToUpdate.name = newName.trim();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\r\n  };\r\n\r\n  const deleteTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        subject.topics = subject.topics.filter((t) => t.id !== topicId);\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    calculateCompletionPercentage();\r\n    localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = (topicId) => {\r\n    if (file) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      updatedRoadmapData.subjects.forEach((subject) => {\r\n        if (subject.id === selectedSubjectId) {\r\n          const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n          if (topicToUpdate) {\r\n            const newAttachment = {\r\n              name: file.name,\r\n              url: URL.createObjectURL(file), // Create a URL for the uploaded file\r\n            };\r\n            topicToUpdate.attachments.push(newAttachment); // Add attachment to the topic\r\n          }\r\n        }\r\n      });\r\n      setRoadmapData(updatedRoadmapData);\r\n      setFile(null); // Reset the file input\r\n      localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\r\n    }\r\n  };\r\n\r\n  const removeAttachment = (topicId, index) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          topicToUpdate.attachments.splice(index, 1); // Remove attachment\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    localStorage.setItem('roadmapData', JSON.stringify(updatedRoadmapData)); // Save to localStorage\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graph.current) {\r\n      renderDiagram();\r\n    }\r\n  }, [roadmapData]);\r\n\r\n  return (\r\n    <div className=\"roadmap-container\">\r\n      <div className=\"subject-container\">\r\n        <h3>Add New Subject</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newSubject}\r\n          onChange={(e) => setNewSubject(e.target.value)}\r\n          placeholder=\"Enter subject name\"\r\n        />\r\n        <button onClick={addSubject}>Add Subject</button>\r\n        <h3>Subjects</h3>\r\n        <ul>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <li key={subject.id}>\r\n              {subject.name}\r\n              <button onClick={() => deleteSubject(subject.id)}>Delete</button>\r\n              <button onClick={() => setSelectedSubjectId(subject.id)}>Select</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"topic-container\">\r\n        <h3>Add New Topic</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newTopic}\r\n          onChange={(e) => setNewTopic(e.target.value)}\r\n          placeholder=\"Enter topic name\"\r\n        />\r\n        <button onClick={addTopic}>Add Topic</button>\r\n        <h3>Topics</h3>\r\n        {selectedSubjectId && (\r\n          <ul>\r\n            {roadmapData.subjects\r\n              .find((subject) => subject.id === selectedSubjectId)\r\n              ?.topics.map((topic) => (\r\n                <li key={topic.id}>\r\n                  {topic.name}\r\n                  <button onClick={() => markAsCompleted(topic.id)}>\r\n                    {topic.completed ? 'Undo' : 'Complete'}\r\n                  </button>\r\n                  <button onClick={() => editTopic(topic.id)}>Edit</button>\r\n                  <button onClick={() => deleteTopic(topic.id)}>Delete</button>\r\n                  <input type=\"file\" onChange={handleFileChange} />\r\n                  <button onClick={() => handleUpload(topic.id)}>Upload</button>\r\n                  {topic.attachments.length > 0 && (\r\n                    <ul>\r\n                      {topic.attachments.map((attachment, index) => (\r\n                        <li key={index}>\r\n                          <a href={attachment.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {attachment.name}\r\n                          </a>\r\n                          <button onClick={() => removeAttachment(topic.id, index)}>Remove</button>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <div className=\"paper-container\" ref={paperContainer}></div>\r\n      <div className=\"completion-bar\" style={{ width: `${completionPercentage}%` }}></div>\r\n      <style>\r\n        {`\r\n          .completion-bar {\r\n            height: 5px;\r\n            background-color: #28a745;\r\n            transition: width 0.3s;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}