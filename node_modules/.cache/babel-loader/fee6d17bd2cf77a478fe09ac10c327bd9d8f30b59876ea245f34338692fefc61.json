{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as joint from '@joint/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  const paperContainer = useRef(null);\n  const graph = useRef(null);\n  const [roadmapData, setRoadmapData] = useState({\n    subjects: []\n  });\n  const [newSubject, setNewSubject] = useState('');\n  const [newTopic, setNewTopic] = useState('');\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n\n  // Load data from localStorage when component mounts\n  useEffect(() => {\n    const savedData = localStorage.getItem('roadmapData');\n    if (savedData) {\n      setRoadmapData(JSON.parse(savedData));\n    }\n  }, []);\n  useEffect(() => {\n    graph.current = new joint.dia.Graph();\n    const paper = new joint.dia.Paper({\n      el: paperContainer.current,\n      model: graph.current,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      interactive: {\n        elementMove: false\n      } // Disable dragging\n    });\n    renderDiagram();\n    calculateCompletionPercentage();\n    return () => {\n      graph.current.off('element:pointerdown'); // Clean up\n    };\n  }, []);\n  const renderDiagram = () => {\n    graph.current.clear();\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100, 100 + subjectIndex * 150);\n      subjectElement.resize(100, 40);\n      subjectElement.attr({\n        body: {\n          fill: 'lightblue'\n        },\n        label: {\n          text: subject.name,\n          fill: 'black'\n        }\n      });\n      subjectElement.attr('element', {\n        draggable: false\n      });\n      subjectElement.addTo(graph.current);\n      let currentY = 150 + subjectIndex * 150;\n      subject.topics.forEach((topic, topicIndex) => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(300, currentY);\n        topicElement.resize(100, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? 'lightgreen' : 'lightcoral'\n          },\n          label: {\n            text: topic.name,\n            fill: 'black'\n          }\n        });\n        topicElement.addTo(graph.current);\n        topicElement.attr('element', {\n          draggable: false\n        });\n        const link = new joint.shapes.standard.Link();\n        if (topicIndex === 0) {\n          // Connect first topic to the subject\n          link.source(subjectElement);\n        } else {\n          // Connect subsequent topics to the previous topic\n          const previousTopicElement = graph.current.getCell(subject.topics[topicIndex - 1].id);\n          link.source(previousTopicElement);\n        }\n        link.target(topicElement);\n        link.addTo(graph.current);\n        currentY += 60; // Space between topics\n      });\n    });\n  };\n  const calculateCompletionPercentage = () => {\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.filter(topic => topic.completed).length;\n    }, 0);\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.length;\n    }, 0);\n    setCompletionPercentage(completedTopics / totalTopics * 100 || 0);\n  };\n  const saveToLocalStorage = data => {\n    localStorage.setItem('roadmapData', JSON.stringify(data));\n  };\n  const addSubject = () => {\n    if (newSubject.trim() !== '') {\n      const updatedRoadmapData = {\n        ...roadmapData,\n        subjects: [...roadmapData.subjects, {\n          id: uuidv4(),\n          name: newSubject,\n          topics: []\n        }]\n      };\n      setRoadmapData(updatedRoadmapData);\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\n      setNewSubject('');\n    } else {\n      alert('Please enter a subject name.');\n    }\n  };\n  const deleteSubject = subjectId => {\n    const updatedRoadmapData = {\n      ...roadmapData,\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId)\n    };\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    setSelectedSubjectId(''); // Clear the selected subject\n  };\n  const addTopic = () => {\n    if (newTopic.trim() !== '' && selectedSubjectId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      const subjectToUpdate = updatedRoadmapData.subjects.find(subject => subject.id === selectedSubjectId);\n      if (subjectToUpdate) {\n        const topicId = uuidv4();\n        subjectToUpdate.topics.push({\n          id: topicId,\n          name: newTopic,\n          completed: false\n        });\n        setRoadmapData(updatedRoadmapData);\n        saveToLocalStorage(updatedRoadmapData); // Save to local storage\n        setNewTopic('');\n        renderDiagram(); // Re-render diagram to reflect the changes\n      } else {\n        alert('Subject not found.');\n      }\n    } else {\n      alert('Please enter a topic name and select a subject.');\n    }\n  };\n  const markAsCompleted = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          topicToUpdate.completed = !topicToUpdate.completed;\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    calculateCompletionPercentage();\n  };\n  const editTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\n          if (newName && newName.trim() !== '') {\n            topicToUpdate.name = newName.trim();\n          }\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n  };\n  const deleteTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        subject.topics = subject.topics.filter(t => t.id !== topicId);\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    calculateCompletionPercentage();\n  };\n  useEffect(() => {\n    if (graph.current) {\n      renderDiagram();\n    }\n  }, [roadmapData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubject,\n        onChange: e => setNewSubject(e.target.value),\n        placeholder: \"Subject Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSubject,\n        children: \"Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [subject.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteSubject(subject.id),\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, subject.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubjectId(e.target.value),\n        value: selectedSubjectId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subject.id,\n          children: subject.name\n        }, subject.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTopic,\n        onChange: e => setNewTopic(e.target.value),\n        placeholder: \"Topic Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTopic,\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paperContainer,\n      style: {\n        border: '1px solid black',\n        width: '800px',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Overall Completion: \", completionPercentage.toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"y3gJsvp2V1055FkxzbfGBQVaC+Q=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","joint","v4","uuidv4","jsxDEV","_jsxDEV","RoadmapView","_s","paperContainer","graph","roadmapData","setRoadmapData","subjects","newSubject","setNewSubject","newTopic","setNewTopic","selectedSubjectId","setSelectedSubjectId","completionPercentage","setCompletionPercentage","savedData","localStorage","getItem","JSON","parse","current","dia","Graph","paper","Paper","el","model","width","height","gridSize","interactive","elementMove","renderDiagram","calculateCompletionPercentage","off","clear","forEach","subject","subjectIndex","subjectElement","shapes","standard","Rectangle","position","resize","attr","body","fill","label","text","name","draggable","addTo","currentY","topics","topic","topicIndex","topicElement","completed","link","Link","source","previousTopicElement","getCell","id","target","completedTopics","reduce","total","filter","length","totalTopics","saveToLocalStorage","data","setItem","stringify","addSubject","trim","updatedRoadmapData","alert","deleteSubject","subjectId","addTopic","subjectToUpdate","find","topicId","push","markAsCompleted","topicToUpdate","t","editTopic","newName","prompt","deleteTopic","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","onClick","map","marginLeft","ref","border","toFixed","_c","$RefreshReg$"],"sources":["D:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport * as joint from '@joint/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const graph = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState({ subjects: [] });\r\n  const [newSubject, setNewSubject] = useState('');\r\n  const [newTopic, setNewTopic] = useState('');\r\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n\r\n  // Load data from localStorage when component mounts\r\n  useEffect(() => {\r\n    const savedData = localStorage.getItem('roadmapData');\r\n    if (savedData) {\r\n      setRoadmapData(JSON.parse(savedData));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    graph.current = new joint.dia.Graph();\r\n    const paper = new joint.dia.Paper({\r\n      el: paperContainer.current,\r\n      model: graph.current,\r\n      width: 800,\r\n      height: 600,\r\n      gridSize: 1,\r\n      interactive: { elementMove: false }, // Disable dragging\r\n    });\r\n\r\n    renderDiagram();\r\n    calculateCompletionPercentage();\r\n\r\n    return () => {\r\n      graph.current.off('element:pointerdown'); // Clean up\r\n    };\r\n  }, []);\r\n\r\n  const renderDiagram = () => {\r\n    graph.current.clear();\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100, 100 + subjectIndex * 150);\r\n      subjectElement.resize(100, 40);\r\n      subjectElement.attr({\r\n        body: { fill: 'lightblue' },\r\n        label: { text: subject.name, fill: 'black' },\r\n      });\r\n\r\n      subjectElement.attr('element', { draggable: false });\r\n      subjectElement.addTo(graph.current);\r\n\r\n      let currentY = 150 + subjectIndex * 150;\r\n      subject.topics.forEach((topic, topicIndex) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(300, currentY);\r\n        topicElement.resize(100, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? 'lightgreen' : 'lightcoral' },\r\n          label: { text: topic.name, fill: 'black' },\r\n        });\r\n\r\n        topicElement.addTo(graph.current);\r\n        topicElement.attr('element', { draggable: false });\r\n\r\n        const link = new joint.shapes.standard.Link();\r\n        if (topicIndex === 0) {\r\n          // Connect first topic to the subject\r\n          link.source(subjectElement);\r\n        } else {\r\n          // Connect subsequent topics to the previous topic\r\n          const previousTopicElement = graph.current.getCell(subject.topics[topicIndex - 1].id);\r\n          link.source(previousTopicElement);\r\n        }\r\n        link.target(topicElement);\r\n        link.addTo(graph.current);\r\n\r\n        currentY += 60; // Space between topics\r\n      });\r\n    });\r\n  };\r\n\r\n  const calculateCompletionPercentage = () => {\r\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.filter(topic => topic.completed).length;\r\n    }, 0);\r\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.length;\r\n    }, 0);\r\n    setCompletionPercentage((completedTopics / totalTopics) * 100 || 0);\r\n  };\r\n\r\n  const saveToLocalStorage = (data) => {\r\n    localStorage.setItem('roadmapData', JSON.stringify(data));\r\n  };\r\n\r\n  const addSubject = () => {\r\n    if (newSubject.trim() !== '') {\r\n      const updatedRoadmapData = {\r\n        ...roadmapData,\r\n        subjects: [\r\n          ...roadmapData.subjects,\r\n          {\r\n            id: uuidv4(),\r\n            name: newSubject,\r\n            topics: [],\r\n          },\r\n        ],\r\n      };\r\n      setRoadmapData(updatedRoadmapData);\r\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n      setNewSubject('');\r\n    } else {\r\n      alert('Please enter a subject name.');\r\n    }\r\n  };\r\n\r\n  const deleteSubject = (subjectId) => {\r\n    const updatedRoadmapData = {\r\n      ...roadmapData,\r\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId),\r\n    };\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    setSelectedSubjectId(''); // Clear the selected subject\r\n  };\r\n\r\n  const addTopic = () => {\r\n    if (newTopic.trim() !== '' && selectedSubjectId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      const subjectToUpdate = updatedRoadmapData.subjects.find(\r\n        (subject) => subject.id === selectedSubjectId\r\n      );\r\n      if (subjectToUpdate) {\r\n        const topicId = uuidv4();\r\n        subjectToUpdate.topics.push({\r\n          id: topicId,\r\n          name: newTopic,\r\n          completed: false,\r\n        });\r\n        setRoadmapData(updatedRoadmapData);\r\n        saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n        setNewTopic('');\r\n        renderDiagram(); // Re-render diagram to reflect the changes\r\n      } else {\r\n        alert('Subject not found.');\r\n      }\r\n    } else {\r\n      alert('Please enter a topic name and select a subject.');\r\n    }\r\n  };\r\n\r\n  const markAsCompleted = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          topicToUpdate.completed = !topicToUpdate.completed;\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  const editTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\r\n          if (newName && newName.trim() !== '') {\r\n            topicToUpdate.name = newName.trim();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n  };\r\n\r\n  const deleteTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        subject.topics = subject.topics.filter((t) => t.id !== topicId);\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graph.current) {\r\n      renderDiagram();\r\n    }\r\n  }, [roadmapData]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div>\r\n        <h3>Add New Subject</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newSubject}\r\n          onChange={(e) => setNewSubject(e.target.value)}\r\n          placeholder=\"Subject Name\"\r\n        />\r\n        <button onClick={addSubject}>Add Subject</button>\r\n        <h3>Existing Subjects</h3>\r\n        <ul>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <li key={subject.id}>\r\n              {subject.name}\r\n              <button onClick={() => deleteSubject(subject.id)} style={{ marginLeft: '10px' }}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Add New Topic</h3>\r\n        <select\r\n          onChange={(e) => setSelectedSubjectId(e.target.value)}\r\n          value={selectedSubjectId}\r\n        >\r\n          <option value=\"\">Select Subject</option>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <option key={subject.id} value={subject.id}>\r\n              {subject.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={newTopic}\r\n          onChange={(e) => setNewTopic(e.target.value)}\r\n          placeholder=\"Topic Name\"\r\n        />\r\n        <button onClick={addTopic}>Add Topic</button>\r\n      </div>\r\n\r\n      <div ref={paperContainer} style={{ border: '1px solid black', width: '800px', height: '600px' }} />\r\n      <p>Overall Completion: {completionPercentage.toFixed(2)}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}