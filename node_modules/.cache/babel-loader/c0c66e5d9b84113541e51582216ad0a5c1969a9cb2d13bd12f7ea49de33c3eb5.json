{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { roadmapData } from '../data/roadmapData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  const mermaidContainer = useRef(null);\n  useEffect(() => {\n    if (mermaidContainer.current) {\n      let mermaidMarkdown = 'graph LR\\n'; // Use graph LR for left-to-right layout\n\n      roadmapData.subjects.forEach(subject => {\n        mermaidMarkdown += `${subject.id}([${subject.name}])\\n`; // Subject as a subgraph\n\n        subject.topics.forEach(topic => {\n          mermaidMarkdown += `${subject.id} --> ${topic.id}[${topic.name}]\\n`; // Connect subject to topic\n        });\n      });\n      mermaidContainer.current.innerHTML = mermaidMarkdown;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mermaidContainer,\n      className: \"mermaid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"McUW503LGCdRNUmq5vJjPAlVCFg=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useRef","useEffect","useState","roadmapData","jsxDEV","_jsxDEV","RoadmapView","_s","mermaidContainer","current","mermaidMarkdown","subjects","forEach","subject","id","name","topics","topic","innerHTML","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { roadmapData } from '../data/roadmapData';\r\n\r\nfunction RoadmapView() {\r\n  const mermaidContainer = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (mermaidContainer.current) {\r\n      let mermaidMarkdown = 'graph LR\\n'; // Use graph LR for left-to-right layout\r\n\r\n      roadmapData.subjects.forEach((subject) => {\r\n        mermaidMarkdown += `${subject.id}([${subject.name}])\\n`; // Subject as a subgraph\r\n\r\n        subject.topics.forEach((topic) => {\r\n          mermaidMarkdown += `${subject.id} --> ${topic.id}[${topic.name}]\\n`; // Connect subject to topic\r\n        });\r\n      });\r\n\r\n      mermaidContainer.current.innerHTML = mermaidMarkdown;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mermaidContainer} className=\"mermaid\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,gBAAgB,GAAGR,MAAM,CAAC,IAAI,CAAC;EAErCC,SAAS,CAAC,MAAM;IACd,IAAIO,gBAAgB,CAACC,OAAO,EAAE;MAC5B,IAAIC,eAAe,GAAG,YAAY,CAAC,CAAC;;MAEpCP,WAAW,CAACQ,QAAQ,CAACC,OAAO,CAAEC,OAAO,IAAK;QACxCH,eAAe,IAAI,GAAGG,OAAO,CAACC,EAAE,KAAKD,OAAO,CAACE,IAAI,MAAM,CAAC,CAAC;;QAEzDF,OAAO,CAACG,MAAM,CAACJ,OAAO,CAAEK,KAAK,IAAK;UAChCP,eAAe,IAAI,GAAGG,OAAO,CAACC,EAAE,QAAQG,KAAK,CAACH,EAAE,IAAIG,KAAK,CAACF,IAAI,KAAK,CAAC,CAAC;QACvE,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFP,gBAAgB,CAACC,OAAO,CAACS,SAAS,GAAGR,eAAe;IACtD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAKe,GAAG,EAAEZ,gBAAiB;MAACa,SAAS,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAAClB,EAAA,CAxBQD,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AA0BpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}