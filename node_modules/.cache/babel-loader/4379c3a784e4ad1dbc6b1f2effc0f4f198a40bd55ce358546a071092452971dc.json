{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as joint from '@joint/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  const paperContainer = useRef(null);\n  const graph = useRef(null);\n  const [roadmapData, setRoadmapData] = useState({\n    subjects: []\n  });\n  const [newSubject, setNewSubject] = useState('');\n  const [newTopic, setNewTopic] = useState('');\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n  useEffect(() => {\n    graph.current = new joint.dia.Graph();\n    const paper = new joint.dia.Paper({\n      el: paperContainer.current,\n      model: graph.current,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      interactive: {\n        elementMove: false\n      } // Disable dragging\n    });\n    renderDiagram();\n    calculateCompletionPercentage();\n    return () => {\n      graph.current.off('element:pointerdown'); // Clean up\n    };\n  }, []);\n  const renderDiagram = () => {\n    graph.current.clear();\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100, 100 + subjectIndex * 150);\n      subjectElement.resize(100, 40);\n      subjectElement.attr({\n        body: {\n          fill: 'lightblue'\n        },\n        label: {\n          text: subject.name,\n          fill: 'black'\n        }\n      });\n\n      // Make the subject not draggable\n      subjectElement.attr('element', {\n        draggable: false\n      });\n      subjectElement.addTo(graph.current);\n      let currentY = 150 + subjectIndex * 150;\n      subject.topics.forEach(topic => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(300, currentY);\n        topicElement.resize(100, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? 'lightgreen' : 'lightcoral'\n          },\n          label: {\n            text: topic.name,\n            fill: 'black'\n          }\n        });\n\n        // Add topic element to the graph and set it to not be draggable\n        topicElement.addTo(graph.current);\n        topicElement.attr('element', {\n          draggable: false\n        }); // Disable dragging\n\n        const link = new joint.shapes.standard.Link();\n        link.source(subjectElement);\n        link.target(topicElement);\n        link.addTo(graph.current);\n\n        // Add context menu on right click for topics\n        topicElement.on('element:pointerdown', (elementView, evt) => {\n          if (evt.button === 2) {\n            // Right-click\n            evt.preventDefault();\n            showContextMenu(evt, topic, subject.id);\n          }\n        });\n        currentY += 60; // Space between topics\n      });\n    });\n  };\n  const showContextMenu = (event, topic, subjectId) => {\n    const menu = document.createElement('div');\n    menu.style.position = 'absolute';\n    menu.style.top = `${event.clientY}px`;\n    menu.style.left = `${event.clientX}px`;\n    menu.style.backgroundColor = '#fff';\n    menu.style.border = '1px solid #ccc';\n    menu.style.padding = '5px';\n    menu.style.zIndex = '1000';\n    menu.innerHTML = `\n      <div onclick=\"markAsCompleted('${subjectId}', '${topic.id}')\" style=\"cursor:pointer;\">Mark as ${topic.completed ? 'Incomplete' : 'Completed'}</div>\n      <div onclick=\"editTopic('${subjectId}', '${topic.id}')\" style=\"cursor:pointer;\">Edit</div>\n      <div onclick=\"deleteTopic('${subjectId}', '${topic.id}')\" style=\"cursor:pointer;\">Delete</div>\n    `;\n    document.body.appendChild(menu);\n\n    // Remove context menu on click elsewhere\n    document.addEventListener('click', () => {\n      menu.remove();\n    }, {\n      once: true\n    });\n  };\n\n  // Mark topic as completed/incomplete\n  window.markAsCompleted = (subjectId, topicId) => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === subjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          topicToUpdate.completed = !topicToUpdate.completed;\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    calculateCompletionPercentage();\n  };\n\n  // Edit topic\n  window.editTopic = (subjectId, topicId) => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === subjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\n          if (newName && newName.trim() !== '') {\n            topicToUpdate.name = newName.trim();\n          }\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n  };\n\n  // Delete topic\n  window.deleteTopic = (subjectId, topicId) => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === subjectId) {\n        subject.topics = subject.topics.filter(t => t.id !== topicId);\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    calculateCompletionPercentage();\n  };\n  const calculateCompletionPercentage = () => {\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.filter(topic => topic.completed).length;\n    }, 0);\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.length;\n    }, 0);\n    setCompletionPercentage(completedTopics / totalTopics * 100 || 0);\n  };\n  const addSubject = () => {\n    if (newSubject.trim() !== '') {\n      const updatedRoadmapData = {\n        ...roadmapData,\n        subjects: [...roadmapData.subjects, {\n          id: uuidv4(),\n          name: newSubject,\n          topics: []\n        }]\n      };\n      setRoadmapData(updatedRoadmapData);\n      setNewSubject('');\n    } else {\n      alert('Please enter a subject name.');\n    }\n  };\n  const addTopic = () => {\n    if (newTopic.trim() !== '' && selectedSubjectId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      const subjectToUpdate = updatedRoadmapData.subjects.find(subject => subject.id === selectedSubjectId);\n      if (subjectToUpdate) {\n        subjectToUpdate.topics.push({\n          id: uuidv4(),\n          name: newTopic,\n          completed: false\n        });\n        setRoadmapData(updatedRoadmapData);\n        setNewTopic('');\n      } else {\n        alert('Subject not found.');\n      }\n    } else {\n      alert('Please enter a topic name and select a subject.');\n    }\n  };\n  useEffect(() => {\n    if (graph.current) {\n      renderDiagram();\n    }\n  }, [roadmapData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubject,\n        onChange: e => setNewSubject(e.target.value),\n        placeholder: \"Subject Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSubject,\n        children: \"Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubjectId(e.target.value),\n        value: selectedSubjectId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subject.id,\n          children: subject.name\n        }, subject.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTopic,\n        onChange: e => setNewTopic(e.target.value),\n        placeholder: \"Topic Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTopic,\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paperContainer,\n      style: {\n        border: '1px solid black',\n        width: '800px',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Overall Completion: \", completionPercentage.toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"YYiBufMuied5EDqcF3FwBmNPaSg=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","joint","v4","uuidv4","jsxDEV","_jsxDEV","RoadmapView","_s","paperContainer","graph","roadmapData","setRoadmapData","subjects","newSubject","setNewSubject","newTopic","setNewTopic","selectedSubjectId","setSelectedSubjectId","completionPercentage","setCompletionPercentage","current","dia","Graph","paper","Paper","el","model","width","height","gridSize","interactive","elementMove","renderDiagram","calculateCompletionPercentage","off","clear","forEach","subject","subjectIndex","subjectElement","shapes","standard","Rectangle","position","resize","attr","body","fill","label","text","name","draggable","addTo","currentY","topics","topic","topicElement","completed","link","Link","source","target","on","elementView","evt","button","preventDefault","showContextMenu","id","event","subjectId","menu","document","createElement","style","top","clientY","left","clientX","backgroundColor","border","padding","zIndex","innerHTML","appendChild","addEventListener","remove","once","window","markAsCompleted","topicId","updatedRoadmapData","topicToUpdate","find","t","editTopic","newName","prompt","trim","deleteTopic","filter","completedTopics","reduce","total","length","totalTopics","addSubject","alert","addTopic","subjectToUpdate","push","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","onClick","map","ref","toFixed","_c","$RefreshReg$"],"sources":["D:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport * as joint from '@joint/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const graph = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState({ subjects: [] });\r\n  const [newSubject, setNewSubject] = useState('');\r\n  const [newTopic, setNewTopic] = useState('');\r\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    graph.current = new joint.dia.Graph();\r\n    const paper = new joint.dia.Paper({\r\n      el: paperContainer.current,\r\n      model: graph.current,\r\n      width: 800,\r\n      height: 600,\r\n      gridSize: 1,\r\n      interactive: { elementMove: false }, // Disable dragging\r\n    });\r\n\r\n    renderDiagram();\r\n    calculateCompletionPercentage();\r\n\r\n    return () => {\r\n      graph.current.off('element:pointerdown'); // Clean up\r\n    };\r\n  }, []);\r\n\r\n  const renderDiagram = () => {\r\n    graph.current.clear();\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100, 100 + subjectIndex * 150);\r\n      subjectElement.resize(100, 40);\r\n      subjectElement.attr({\r\n        body: { fill: 'lightblue' },\r\n        label: { text: subject.name, fill: 'black' },\r\n      });\r\n\r\n      // Make the subject not draggable\r\n      subjectElement.attr('element', { draggable: false });\r\n      subjectElement.addTo(graph.current);\r\n\r\n      let currentY = 150 + subjectIndex * 150;\r\n      subject.topics.forEach((topic) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(300, currentY);\r\n        topicElement.resize(100, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? 'lightgreen' : 'lightcoral' },\r\n          label: { text: topic.name, fill: 'black' },\r\n        });\r\n\r\n        // Add topic element to the graph and set it to not be draggable\r\n        topicElement.addTo(graph.current);\r\n        topicElement.attr('element', { draggable: false }); // Disable dragging\r\n\r\n        const link = new joint.shapes.standard.Link();\r\n        link.source(subjectElement);\r\n        link.target(topicElement);\r\n        link.addTo(graph.current);\r\n\r\n        // Add context menu on right click for topics\r\n        topicElement.on('element:pointerdown', (elementView, evt) => {\r\n          if (evt.button === 2) { // Right-click\r\n            evt.preventDefault();\r\n            showContextMenu(evt, topic, subject.id);\r\n          }\r\n        });\r\n\r\n        currentY += 60; // Space between topics\r\n      });\r\n    });\r\n  };\r\n\r\n  const showContextMenu = (event, topic, subjectId) => {\r\n    const menu = document.createElement('div');\r\n    menu.style.position = 'absolute';\r\n    menu.style.top = `${event.clientY}px`;\r\n    menu.style.left = `${event.clientX}px`;\r\n    menu.style.backgroundColor = '#fff';\r\n    menu.style.border = '1px solid #ccc';\r\n    menu.style.padding = '5px';\r\n    menu.style.zIndex = '1000';\r\n    menu.innerHTML = `\r\n      <div onclick=\"markAsCompleted('${subjectId}', '${topic.id}')\" style=\"cursor:pointer;\">Mark as ${topic.completed ? 'Incomplete' : 'Completed'}</div>\r\n      <div onclick=\"editTopic('${subjectId}', '${topic.id}')\" style=\"cursor:pointer;\">Edit</div>\r\n      <div onclick=\"deleteTopic('${subjectId}', '${topic.id}')\" style=\"cursor:pointer;\">Delete</div>\r\n    `;\r\n    document.body.appendChild(menu);\r\n\r\n    // Remove context menu on click elsewhere\r\n    document.addEventListener('click', () => {\r\n      menu.remove();\r\n    }, { once: true });\r\n  };\r\n\r\n  // Mark topic as completed/incomplete\r\n  window.markAsCompleted = (subjectId, topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === subjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          topicToUpdate.completed = !topicToUpdate.completed;\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  // Edit topic\r\n  window.editTopic = (subjectId, topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === subjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\r\n          if (newName && newName.trim() !== '') {\r\n            topicToUpdate.name = newName.trim();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n  };\r\n\r\n  // Delete topic\r\n  window.deleteTopic = (subjectId, topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === subjectId) {\r\n        subject.topics = subject.topics.filter((t) => t.id !== topicId);\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  const calculateCompletionPercentage = () => {\r\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.filter(topic => topic.completed).length;\r\n    }, 0);\r\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.length;\r\n    }, 0);\r\n    setCompletionPercentage((completedTopics / totalTopics) * 100 || 0);\r\n  };\r\n\r\n  const addSubject = () => {\r\n    if (newSubject.trim() !== '') {\r\n      const updatedRoadmapData = {\r\n        ...roadmapData,\r\n        subjects: [\r\n          ...roadmapData.subjects,\r\n          {\r\n            id: uuidv4(),\r\n            name: newSubject,\r\n            topics: [],\r\n          },\r\n        ],\r\n      };\r\n      setRoadmapData(updatedRoadmapData);\r\n      setNewSubject('');\r\n    } else {\r\n      alert('Please enter a subject name.');\r\n    }\r\n  };\r\n\r\n  const addTopic = () => {\r\n    if (newTopic.trim() !== '' && selectedSubjectId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      const subjectToUpdate = updatedRoadmapData.subjects.find(\r\n        (subject) => subject.id === selectedSubjectId\r\n      );\r\n      if (subjectToUpdate) {\r\n        subjectToUpdate.topics.push({\r\n          id: uuidv4(),\r\n          name: newTopic,\r\n          completed: false,\r\n        });\r\n        setRoadmapData(updatedRoadmapData);\r\n        setNewTopic('');\r\n      } else {\r\n        alert('Subject not found.');\r\n      }\r\n    } else {\r\n      alert('Please enter a topic name and select a subject.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graph.current) {\r\n      renderDiagram();\r\n    }\r\n  }, [roadmapData]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Add New Subject</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newSubject}\r\n          onChange={(e) => setNewSubject(e.target.value)}\r\n          placeholder=\"Subject Name\"\r\n        />\r\n        <button onClick={addSubject}>Add Subject</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Add New Topic</h3>\r\n        <select\r\n          onChange={(e) => setSelectedSubjectId(e.target.value)}\r\n          value={selectedSubjectId}\r\n        >\r\n          <option value=\"\">Select Subject</option>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <option key={subject.id} value={subject.id}>\r\n              {subject.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={newTopic}\r\n          onChange={(e) => setNewTopic(e.target.value)}\r\n          placeholder=\"Topic Name\"\r\n        />\r\n        <button onClick={addTopic}>Add Topic</button>\r\n      </div>\r\n\r\n      <div ref={paperContainer} style={{ border: '1px solid black', width: '800px', height: '600px' }} />\r\n      <p>Overall Completion: {completionPercentage.toFixed(2)}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}