{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as joint from '@joint/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  var _roadmapData$subjects;\n  const paperContainer = useRef(null);\n  const graph = useRef(null);\n  const [roadmapData, setRoadmapData] = useState({\n    subjects: []\n  });\n  const [newSubject, setNewSubject] = useState('');\n  const [newTopic, setNewTopic] = useState('');\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n  useEffect(() => {\n    // Load the roadmap data from local storage\n    const storedData = localStorage.getItem('roadmapData');\n    if (storedData) {\n      setRoadmapData(JSON.parse(storedData));\n    }\n\n    // Initialize the graph\n    graph.current = new joint.dia.Graph();\n    const paper = new joint.dia.Paper({\n      el: paperContainer.current,\n      model: graph.current,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      interactive: {\n        elementMove: false\n      } // Disable dragging\n    });\n    renderDiagram();\n    calculateCompletionPercentage();\n    return () => {\n      graph.current.off('element:pointerdown'); // Clean up\n    };\n  }, []);\n\n  // Function to save roadmap data to local storage\n  const saveToLocalStorage = data => {\n    localStorage.setItem('roadmapData', JSON.stringify(data));\n  };\n  const renderDiagram = () => {\n    graph.current.clear();\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100, 100 + subjectIndex * 150);\n      subjectElement.resize(100, 40);\n      subjectElement.attr({\n        body: {\n          fill: 'lightblue'\n        },\n        label: {\n          text: subject.name,\n          fill: 'black'\n        }\n      });\n      subjectElement.addTo(graph.current);\n      let currentX = 300; // Start X position for topics\n      let currentY = 100 + subjectIndex * 150; // Base Y position\n\n      subject.topics.forEach((topic, topicIndex) => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(currentX, currentY);\n        topicElement.resize(100, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? 'lightgreen' : 'lightcoral'\n          },\n          label: {\n            text: topic.name,\n            fill: 'black'\n          }\n        });\n        topicElement.addTo(graph.current);\n        topicElement.attr('element', {\n          draggable: false\n        });\n\n        // Connect the first topic to the subject\n        if (topicIndex === 0) {\n          const link = new joint.shapes.standard.Link();\n          link.source(subjectElement);\n          link.target(topicElement);\n          link.addTo(graph.current);\n        } else {\n          // Connect subsequent topics to the previous topic\n          const previousTopicElement = graph.current.getCell(subject.topics[topicIndex - 1].id);\n          const link = new joint.shapes.standard.Link();\n          link.source(previousTopicElement);\n          link.target(topicElement);\n          link.addTo(graph.current);\n        }\n\n        // Update currentX and currentY for the next topic\n        currentX += 120; // Move to the right for the next topic\n        if (currentX > 800) {\n          // Wrap around to the next line if we reach the edge\n          currentX = 300;\n          currentY += 40; // Move down to the next line\n        }\n      });\n    });\n  };\n  const calculateCompletionPercentage = () => {\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.filter(topic => topic.completed).length;\n    }, 0);\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.length;\n    }, 0);\n    setCompletionPercentage(completedTopics / totalTopics * 100 || 0);\n  };\n  const addSubject = () => {\n    if (newSubject.trim() !== '') {\n      const updatedRoadmapData = {\n        ...roadmapData,\n        subjects: [...roadmapData.subjects, {\n          id: uuidv4(),\n          name: newSubject,\n          topics: []\n        }]\n      };\n      setRoadmapData(updatedRoadmapData);\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\n      setNewSubject('');\n    } else {\n      alert('Please enter a subject name.');\n    }\n  };\n  const deleteSubject = subjectId => {\n    const updatedRoadmapData = {\n      ...roadmapData,\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId)\n    };\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    setSelectedSubjectId(''); // Clear the selected subject\n  };\n  const addTopic = () => {\n    if (newTopic.trim() !== '' && selectedSubjectId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      const subjectToUpdate = updatedRoadmapData.subjects.find(subject => subject.id === selectedSubjectId);\n      if (subjectToUpdate) {\n        const topicId = uuidv4();\n        subjectToUpdate.topics.push({\n          id: topicId,\n          name: newTopic,\n          completed: false\n        });\n        setRoadmapData(updatedRoadmapData);\n        saveToLocalStorage(updatedRoadmapData); // Save to local storage\n        setNewTopic('');\n\n        // Re-render the diagram to reflect the changes\n        renderDiagram(); // Call renderDiagram to update connections\n      } else {\n        alert('Subject not found.');\n      }\n    } else {\n      alert('Please enter a topic name and select a subject.');\n    }\n  };\n  const markAsCompleted = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          topicToUpdate.completed = !topicToUpdate.completed;\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    calculateCompletionPercentage();\n  };\n  const editTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\n          if (newName && newName.trim() !== '') {\n            topicToUpdate.name = newName.trim();\n          }\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n  };\n  const deleteTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        subject.topics = subject.topics.filter(t => t.id !== topicId);\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    calculateCompletionPercentage();\n  };\n  useEffect(() => {\n    if (graph.current) {\n      renderDiagram();\n    }\n  }, [roadmapData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubject,\n        onChange: e => setNewSubject(e.target.value),\n        placeholder: \"Subject Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSubject,\n        children: \"Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [subject.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteSubject(subject.id),\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedSubjectId(subject.id),\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, subject.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Topic to Selected Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubjectId(e.target.value),\n        value: selectedSubjectId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subject.id,\n          children: subject.name\n        }, subject.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTopic,\n        onChange: e => setNewTopic(e.target.value),\n        placeholder: \"Topic Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTopic,\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Completion Percentage: \", completionPercentage.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), selectedSubjectId && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Topics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (_roadmapData$subjects = roadmapData.subjects.find(s => s.id === selectedSubjectId)) === null || _roadmapData$subjects === void 0 ? void 0 : _roadmapData$subjects.topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [topic.name, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => markAsCompleted(topic.id),\n              style: {\n                marginLeft: '10px'\n              },\n              children: topic.completed ? 'Unmark' : 'Complete'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editTopic(topic.id),\n              style: {\n                marginLeft: '10px'\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTopic(topic.id),\n              style: {\n                marginLeft: '10px'\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)]\n          }, topic.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid black',\n        width: '800px',\n        height: '600px',\n        overflowX: 'auto',\n        marginLeft: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: paperContainer,\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"YYiBufMuied5EDqcF3FwBmNPaSg=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","joint","v4","uuidv4","jsxDEV","_jsxDEV","RoadmapView","_s","_roadmapData$subjects","paperContainer","graph","roadmapData","setRoadmapData","subjects","newSubject","setNewSubject","newTopic","setNewTopic","selectedSubjectId","setSelectedSubjectId","completionPercentage","setCompletionPercentage","storedData","localStorage","getItem","JSON","parse","current","dia","Graph","paper","Paper","el","model","width","height","gridSize","interactive","elementMove","renderDiagram","calculateCompletionPercentage","off","saveToLocalStorage","data","setItem","stringify","clear","forEach","subject","subjectIndex","subjectElement","shapes","standard","Rectangle","position","resize","attr","body","fill","label","text","name","addTo","currentX","currentY","topics","topic","topicIndex","topicElement","completed","draggable","link","Link","source","target","previousTopicElement","getCell","id","completedTopics","reduce","total","filter","length","totalTopics","addSubject","trim","updatedRoadmapData","alert","deleteSubject","subjectId","addTopic","subjectToUpdate","find","topicId","push","markAsCompleted","topicToUpdate","t","editTopic","newName","prompt","deleteTopic","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","onClick","map","marginLeft","toFixed","s","border","overflowX","ref","_c","$RefreshReg$"],"sources":["C:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport * as joint from '@joint/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const graph = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState({ subjects: [] });\r\n  const [newSubject, setNewSubject] = useState('');\r\n  const [newTopic, setNewTopic] = useState('');\r\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Load the roadmap data from local storage\r\n    const storedData = localStorage.getItem('roadmapData');\r\n    if (storedData) {\r\n      setRoadmapData(JSON.parse(storedData));\r\n    }\r\n\r\n    // Initialize the graph\r\n    graph.current = new joint.dia.Graph();\r\n    const paper = new joint.dia.Paper({\r\n      el: paperContainer.current,\r\n      model: graph.current,\r\n      width: 800,\r\n      height: 600,\r\n      gridSize: 1,\r\n      interactive: { elementMove: false }, // Disable dragging\r\n    });\r\n\r\n    renderDiagram();\r\n    calculateCompletionPercentage();\r\n\r\n    return () => {\r\n      graph.current.off('element:pointerdown'); // Clean up\r\n    };\r\n  }, []);\r\n\r\n  // Function to save roadmap data to local storage\r\n  const saveToLocalStorage = (data) => {\r\n    localStorage.setItem('roadmapData', JSON.stringify(data));\r\n  };\r\n\r\n  const renderDiagram = () => {\r\n    graph.current.clear();\r\n\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100, 100 + subjectIndex * 150);\r\n      subjectElement.resize(100, 40);\r\n      subjectElement.attr({\r\n        body: { fill: 'lightblue' },\r\n        label: { text: subject.name, fill: 'black' },\r\n      });\r\n\r\n      subjectElement.addTo(graph.current);\r\n\r\n      let currentX = 300; // Start X position for topics\r\n      let currentY = 100 + subjectIndex * 150; // Base Y position\r\n\r\n      subject.topics.forEach((topic, topicIndex) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(currentX, currentY);\r\n        topicElement.resize(100, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? 'lightgreen' : 'lightcoral' },\r\n          label: { text: topic.name, fill: 'black' },\r\n        });\r\n\r\n        topicElement.addTo(graph.current);\r\n        topicElement.attr('element', { draggable: false });\r\n\r\n        // Connect the first topic to the subject\r\n        if (topicIndex === 0) {\r\n          const link = new joint.shapes.standard.Link();\r\n          link.source(subjectElement);\r\n          link.target(topicElement);\r\n          link.addTo(graph.current);\r\n        } else {\r\n          // Connect subsequent topics to the previous topic\r\n          const previousTopicElement = graph.current.getCell(subject.topics[topicIndex - 1].id);\r\n          const link = new joint.shapes.standard.Link();\r\n          link.source(previousTopicElement);\r\n          link.target(topicElement);\r\n          link.addTo(graph.current);\r\n        }\r\n\r\n        // Update currentX and currentY for the next topic\r\n        currentX += 120; // Move to the right for the next topic\r\n        if (currentX > 800) { // Wrap around to the next line if we reach the edge\r\n          currentX = 300;\r\n          currentY += 40; // Move down to the next line\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const calculateCompletionPercentage = () => {\r\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.filter(topic => topic.completed).length;\r\n    }, 0);\r\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.length;\r\n    }, 0);\r\n    setCompletionPercentage((completedTopics / totalTopics) * 100 || 0);\r\n  };\r\n\r\n  const addSubject = () => {\r\n    if (newSubject.trim() !== '') {\r\n      const updatedRoadmapData = {\r\n        ...roadmapData,\r\n        subjects: [\r\n          ...roadmapData.subjects,\r\n          {\r\n            id: uuidv4(),\r\n            name: newSubject,\r\n            topics: [],\r\n          },\r\n        ],\r\n      };\r\n      setRoadmapData(updatedRoadmapData);\r\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n      setNewSubject('');\r\n    } else {\r\n      alert('Please enter a subject name.');\r\n    }\r\n  };\r\n\r\n  const deleteSubject = (subjectId) => {\r\n    const updatedRoadmapData = {\r\n      ...roadmapData,\r\n      subjects: roadmapData.subjects.filter(subject => subject .id !== subjectId),\r\n    };\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    setSelectedSubjectId(''); // Clear the selected subject\r\n  };\r\n\r\n  const addTopic = () => {\r\n    if (newTopic.trim() !== '' && selectedSubjectId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      const subjectToUpdate = updatedRoadmapData.subjects.find(\r\n        (subject) => subject.id === selectedSubjectId\r\n      );\r\n      if (subjectToUpdate) {\r\n        const topicId = uuidv4();\r\n        subjectToUpdate.topics.push({\r\n          id: topicId,\r\n          name: newTopic,\r\n          completed: false,\r\n        });\r\n        setRoadmapData(updatedRoadmapData);\r\n        saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n        setNewTopic('');\r\n\r\n        // Re-render the diagram to reflect the changes\r\n        renderDiagram(); // Call renderDiagram to update connections\r\n      } else {\r\n        alert('Subject not found.');\r\n      }\r\n    } else {\r\n      alert('Please enter a topic name and select a subject.');\r\n    }\r\n  };\r\n\r\n  const markAsCompleted = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          topicToUpdate.completed = !topicToUpdate.completed;\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  const editTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\r\n          if (newName && newName.trim() !== '') {\r\n            topicToUpdate.name = newName.trim();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n  };\r\n\r\n  const deleteTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        subject.topics = subject.topics.filter((t) => t.id !== topicId);\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graph.current) {\r\n      renderDiagram();\r\n    }\r\n  }, [roadmapData]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div>\r\n        <h3>Add New Subject</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newSubject}\r\n          onChange={(e) => setNewSubject(e.target.value)}\r\n          placeholder=\"Subject Name\"\r\n        />\r\n        <button onClick={addSubject}>Add Subject</button>\r\n        <h3>Existing Subjects</h3>\r\n        <ul>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <li key={subject.id}>\r\n              {subject.name}\r\n              <button onClick={() => deleteSubject(subject.id)} style={{ marginLeft: '10px' }}>Delete</button>\r\n              <button onClick={() => setSelectedSubjectId(subject.id)} style={{ marginLeft: '10px' }}>Select</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <h3>Add Topic to Selected Subject</h3>\r\n        <select onChange={(e) => setSelectedSubjectId(e.target.value)} value={selectedSubjectId}>\r\n          <option value=\"\">Select a Subject</option>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <option key={subject.id} value={subject.id}>\r\n              {subject.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={newTopic}\r\n          onChange={(e) => setNewTopic(e.target.value)}\r\n          placeholder=\"Topic Name\"\r\n        />\r\n        <button onClick={addTopic}>Add Topic</button>\r\n        <h3>Completion Percentage: {completionPercentage.toFixed(2)}%</h3>\r\n        {selectedSubjectId && (\r\n          <div>\r\n            <h3>Topics</h3>\r\n            <ul>\r\n              {roadmapData.subjects.find(s => s.id === selectedSubjectId)?.topics.map((topic) => (\r\n                <li key={topic.id}>\r\n                  {topic .name}\r\n                  <button onClick={() => markAsCompleted(topic.id)} style={{ marginLeft: '10px' }}>\r\n                    {topic.completed ? 'Unmark' : 'Complete'}\r\n                  </button>\r\n                  <button onClick={() => editTopic(topic.id)} style={{ marginLeft: '10px' }}>Edit</button>\r\n                  <button onClick={() => deleteTopic(topic.id)} style={{ marginLeft: '10px' }}>Delete</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          border: '1px solid black',\r\n          width: '800px',\r\n          height: '600px',\r\n          overflowX: 'auto',\r\n          marginLeft: '20px',\r\n        }}\r\n      >\r\n        <div ref={paperContainer} style={{ width: '100%', height: '100%' }} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}