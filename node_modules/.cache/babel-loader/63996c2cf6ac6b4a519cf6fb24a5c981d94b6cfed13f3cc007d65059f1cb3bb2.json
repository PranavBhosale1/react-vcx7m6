{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as joint from '@joint/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  var _roadmapData$subjects;\n  const paperContainer = useRef(null);\n  const graph = useRef(null);\n  const [roadmapData, setRoadmapData] = useState({\n    subjects: []\n  });\n  const [newSubject, setNewSubject] = useState('');\n  const [newTopic, setNewTopic] = useState('');\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n  useEffect(() => {\n    graph.current = new joint.dia.Graph();\n    const paper = new joint.dia.Paper({\n      el: paperContainer.current,\n      model: graph.current,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      interactive: {\n        elementMove: false\n      } // Disable dragging\n    });\n    renderDiagram();\n    calculateCompletionPercentage();\n    return () => {\n      graph.current.off('element:pointerdown'); // Clean up\n    };\n  }, []);\n  const renderDiagram = () => {\n    graph.current.clear();\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100, 100 + subjectIndex * 150);\n      subjectElement.resize(100, 40);\n      subjectElement.attr({\n        body: {\n          fill: 'lightblue'\n        },\n        label: {\n          text: subject.name,\n          fill: 'black'\n        }\n      });\n      subjectElement.attr('element', {\n        draggable: false\n      });\n      subjectElement.addTo(graph.current);\n      let currentY = 150 + subjectIndex * 150;\n      subject.topics.forEach(topic => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(300, currentY);\n        topicElement.resize(100, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? 'lightgreen' : 'lightcoral'\n          },\n          label: {\n            text: topic.name,\n            fill: 'black'\n          }\n        });\n        topicElement.addTo(graph.current);\n        topicElement.attr('element', {\n          draggable: false\n        });\n        const link = new joint.shapes.standard.Link();\n        link.source(subjectElement);\n        link.target(topicElement);\n        link.addTo(graph.current);\n        currentY += 60; // Space between topics\n      });\n    });\n  };\n  const calculateCompletionPercentage = () => {\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.filter(topic => topic.completed).length;\n    }, 0);\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.length;\n    }, 0);\n    setCompletionPercentage(completedTopics / totalTopics * 100 || 0);\n  };\n  const addSubject = () => {\n    if (newSubject.trim() !== '') {\n      const updatedRoadmapData = {\n        ...roadmapData,\n        subjects: [...roadmapData.subjects, {\n          id: uuidv4(),\n          name: newSubject,\n          topics: []\n        }]\n      };\n      setRoadmapData(updatedRoadmapData);\n      setNewSubject('');\n    } else {\n      alert('Please enter a subject name.');\n    }\n  };\n  const addTopic = () => {\n    if (newTopic.trim() !== '' && selectedSubjectId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      const subjectToUpdate = updatedRoadmapData.subjects.find(subject => subject.id === selectedSubjectId);\n      if (subjectToUpdate) {\n        subjectToUpdate.topics.push({\n          id: uuidv4(),\n          name: newTopic,\n          completed: false\n        });\n        setRoadmapData(updatedRoadmapData);\n        setNewTopic('');\n      } else {\n        alert('Subject not found.');\n      }\n    } else {\n      alert('Please enter a topic name and select a subject.');\n    }\n  };\n  const markAsCompleted = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          topicToUpdate.completed = !topicToUpdate.completed;\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    calculateCompletionPercentage();\n  };\n  const editTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\n          if (newName && newName.trim() !== '') {\n            topicToUpdate.name = newName.trim();\n          }\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n  };\n  const deleteTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        subject.topics = subject.topics.filter(t => t.id !== topicId);\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    calculateCompletionPercentage();\n  };\n  useEffect(() => {\n    if (graph.current) {\n      renderDiagram();\n    }\n  }, [roadmapData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubject,\n        onChange: e => setNewSubject(e.target.value),\n        placeholder: \"Subject Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSubject,\n        children: \"Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubjectId(e.target.value),\n        value: selectedSubjectId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subject.id,\n          children: subject.name\n        }, subject.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTopic,\n        onChange: e => setNewTopic(e.target.value),\n        placeholder: \"Topic Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTopic,\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paperContainer,\n      style: {\n        border: '1px solid black',\n        width: '800px',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Manage Topics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), selectedSubjectId && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_roadmapData$subjects = roadmapData.subjects.find(subject => subject.id === selectedSubjectId)) === null || _roadmapData$subjects === void 0 ? void 0 : _roadmapData$subjects.topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textDecoration: topic.completed ? 'line-through' : 'none'\n            },\n            children: topic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => markAsCompleted(topic.id),\n              children: [\"Mark as \", topic.completed ? 'Incomplete' : 'Completed']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editTopic(topic.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTopic(topic.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this)]\n        }, topic.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), !selectedSubjectId && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select a subject to manage topics.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Overall Completion: \", completionPercentage.toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"YYiBufMuied5EDqcF3FwBmNPaSg=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","joint","v4","uuidv4","jsxDEV","_jsxDEV","RoadmapView","_s","_roadmapData$subjects","paperContainer","graph","roadmapData","setRoadmapData","subjects","newSubject","setNewSubject","newTopic","setNewTopic","selectedSubjectId","setSelectedSubjectId","completionPercentage","setCompletionPercentage","current","dia","Graph","paper","Paper","el","model","width","height","gridSize","interactive","elementMove","renderDiagram","calculateCompletionPercentage","off","clear","forEach","subject","subjectIndex","subjectElement","shapes","standard","Rectangle","position","resize","attr","body","fill","label","text","name","draggable","addTo","currentY","topics","topic","topicElement","completed","link","Link","source","target","completedTopics","reduce","total","filter","length","totalTopics","addSubject","trim","updatedRoadmapData","id","alert","addTopic","subjectToUpdate","find","push","markAsCompleted","topicId","topicToUpdate","t","editTopic","newName","prompt","deleteTopic","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","onClick","map","ref","border","marginLeft","marginBottom","textDecoration","toFixed","_c","$RefreshReg$"],"sources":["D:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport * as joint from '@joint/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const graph = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState({ subjects: [] });\r\n  const [newSubject, setNewSubject] = useState('');\r\n  const [newTopic, setNewTopic] = useState('');\r\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    graph.current = new joint.dia.Graph();\r\n    const paper = new joint.dia.Paper({\r\n      el: paperContainer.current,\r\n      model: graph.current,\r\n      width: 800,\r\n      height: 600,\r\n      gridSize: 1,\r\n      interactive: { elementMove: false }, // Disable dragging\r\n    });\r\n\r\n    renderDiagram();\r\n    calculateCompletionPercentage();\r\n\r\n    return () => {\r\n      graph.current.off('element:pointerdown'); // Clean up\r\n    };\r\n  }, []);\r\n\r\n  const renderDiagram = () => {\r\n    graph.current.clear();\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100, 100 + subjectIndex * 150);\r\n      subjectElement.resize(100, 40);\r\n      subjectElement.attr({\r\n        body: { fill: 'lightblue' },\r\n        label: { text: subject.name, fill: 'black' },\r\n      });\r\n\r\n      subjectElement.attr('element', { draggable: false });\r\n      subjectElement.addTo(graph.current);\r\n\r\n      let currentY = 150 + subjectIndex * 150;\r\n      subject.topics.forEach((topic) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(300, currentY);\r\n        topicElement.resize(100, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? 'lightgreen' : 'lightcoral' },\r\n          label: { text: topic.name, fill: 'black' },\r\n        });\r\n\r\n        topicElement.addTo(graph.current);\r\n        topicElement.attr('element', { draggable: false });\r\n\r\n        const link = new joint.shapes.standard.Link();\r\n        link.source(subjectElement);\r\n        link.target(topicElement);\r\n        link.addTo(graph.current);\r\n\r\n        currentY += 60; // Space between topics\r\n      });\r\n    });\r\n  };\r\n\r\n  const calculateCompletionPercentage = () => {\r\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.filter(topic => topic.completed).length;\r\n    }, 0);\r\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.length;\r\n    }, 0);\r\n    setCompletionPercentage((completedTopics / totalTopics) * 100 || 0);\r\n  };\r\n\r\n  const addSubject = () => {\r\n    if (newSubject.trim() !== '') {\r\n      const updatedRoadmapData = {\r\n        ...roadmapData,\r\n        subjects: [\r\n          ...roadmapData.subjects,\r\n          {\r\n            id: uuidv4(),\r\n            name: newSubject,\r\n            topics: [],\r\n          },\r\n        ],\r\n      };\r\n      setRoadmapData(updatedRoadmapData);\r\n      setNewSubject('');\r\n    } else {\r\n      alert('Please enter a subject name.');\r\n    }\r\n  };\r\n\r\n  const addTopic = () => {\r\n    if (newTopic.trim() !== '' && selectedSubjectId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      const subjectToUpdate = updatedRoadmapData.subjects.find(\r\n        (subject) => subject.id === selectedSubjectId\r\n      );\r\n      if (subjectToUpdate) {\r\n        subjectToUpdate.topics.push({\r\n          id: uuidv4(),\r\n          name: newTopic,\r\n          completed: false,\r\n        });\r\n        setRoadmapData(updatedRoadmapData);\r\n        setNewTopic('');\r\n      } else {\r\n        alert('Subject not found.');\r\n      }\r\n    } else {\r\n      alert('Please enter a topic name and select a subject.');\r\n    }\r\n  };\r\n\r\n  const markAsCompleted = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          topicToUpdate.completed = !topicToUpdate.completed;\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  const editTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\r\n          if (newName && newName.trim() !== '') {\r\n            topicToUpdate.name = newName.trim();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n  };\r\n\r\n  const deleteTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        subject.topics = subject.topics.filter((t) => t.id !== topicId);\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graph.current) {\r\n      renderDiagram();\r\n    }\r\n  }, [roadmapData]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div>\r\n        <h3>Add New Subject</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newSubject}\r\n          onChange={(e) => setNewSubject(e.target.value)}\r\n          placeholder=\"Subject Name\"\r\n        />\r\n        <button onClick={addSubject}>Add Subject</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Add New Topic</h3>\r\n        <select\r\n          onChange={(e) => setSelectedSubjectId(e.target.value)}\r\n          value={selectedSubjectId}\r\n        >\r\n          <option value=\"\">Select Subject</option>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <option key={subject.id} value={subject.id}>\r\n              {subject.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={newTopic}\r\n          onChange={(e) => setNewTopic(e.target.value)}\r\n          placeholder=\"Topic Name\"\r\n        />\r\n        <button onClick={addTopic}>Add Topic</button>\r\n      </div>\r\n\r\n      <div ref={paperContainer} style={{ border: '1px solid black', width: '800px', height: '600px' }} />\r\n      \r\n      {/* Right side for managing topics */}\r\n      <div style={{ marginLeft: '20px' }}>\r\n        <h3>Manage Topics</h3>\r\n        {selectedSubjectId && (\r\n          <ul>\r\n            {roadmapData.subjects.find((subject) => subject.id === selectedSubjectId)?.topics.map((topic) => (\r\n              <li key={topic.id} style={{ marginBottom: '10px' }}>\r\n                <span style={{ textDecoration: topic.completed ? 'line-through' : 'none' }}>\r\n                  {topic.name}\r\n                </span>\r\n                <div>\r\n                  <button onClick={() => markAsCompleted(topic.id)}>\r\n                    Mark as {topic.completed ? 'Incomplete' : 'Completed'}\r\n                  </button>\r\n                  <button onClick={() => editTopic(topic.id)}>Edit</button>\r\n                  <button onClick={() => deleteTopic(topic.id)}>Delete</button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {!selectedSubjectId && <p>Please select a subject to manage topics.</p>}\r\n      </div>\r\n\r\n      <p>Overall Completion: {completionPercentage.toFixed(2)}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}