{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as joint from '@joint/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  const paperContainer = useRef(null);\n  const graph = useRef(null);\n  const paper = useRef(null);\n  const [roadmapData, setRoadmapData] = useState(() => {\n    const savedData = localStorage.getItem('roadmapData');\n    return savedData ? JSON.parse(savedData) : {\n      subjects: []\n    };\n  });\n  const [newSubject, setNewSubject] = useState('');\n  const [newTopic, setNewTopic] = useState('');\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n\n  // Initialize JointJS graph and paper\n  useEffect(() => {\n    graph.current = new joint.dia.Graph();\n    paper.current = new joint.dia.Paper({\n      el: paperContainer.current,\n      model: graph.current,\n      width: 800,\n      // Fixed width\n      height: 600,\n      gridSize: 1,\n      interactive: false\n    });\n    renderDiagram();\n    calculateCompletionPercentage();\n  }, []);\n\n  // Render the diagram with auto-layout\n  const renderDiagram = () => {\n    graph.current.clear();\n    const elements = [];\n    const links = [];\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const completedCount = subject.topics.filter(topic => topic.completed).length;\n      const totalCount = subject.topics.length;\n      const progress = totalCount ? completedCount / totalCount * 100 : 0; // Calculate progress\n\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100, 100 + subjectIndex * 150);\n      subjectElement.resize(100, 40);\n      subjectElement.attr({\n        body: {\n          fill: 'lightblue'\n        },\n        label: {\n          text: subject.name,\n          fill: 'black'\n        }\n      });\n      subjectElement.addTo(graph.current);\n      elements.push(subjectElement);\n\n      // Create progress bar inside the subject element\n      const progressBar = new joint.shapes.standard.Rectangle();\n      progressBar.position(100, 130 + subjectIndex * 150);\n      progressBar.resize(progress, 10); // Set width based on progress\n      progressBar.attr({\n        body: {\n          fill: 'green'\n        }\n      });\n      progressBar.addTo(graph.current);\n      elements.push(progressBar);\n\n      // Create topics and connect them to the subject\n      let currentY = 150 + subjectIndex * 150; // Start below subject\n      subject.topics.forEach(topic => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(300, currentY);\n        topicElement.resize(100, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? 'lightgreen' : 'lightcoral'\n          },\n          label: {\n            text: topic.name,\n            fill: 'black'\n          }\n        });\n        topicElement.addTo(graph.current);\n        elements.push(topicElement);\n        const link = new joint.shapes.standard.Link();\n        link.source(subjectElement);\n        link.target(topicElement);\n        link.addTo(graph.current);\n        links.push(link);\n\n        // Update currentY for the next topic\n        currentY += 60; // Space between topics\n      });\n    });\n\n    // Check if layout is defined and apply auto-layout\n    if (joint.layout && joint.layout.DirectedGraph) {\n      joint.layout.DirectedGraph.layout(graph.current, {\n        setNodePos: (node, x, y) => {\n          node.position(x, y);\n        }\n      });\n    }\n  };\n\n  // Toggle topic completion status\n  const handleTopicCompletionToggle = (subjectId, topicId) => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === subjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          topicToUpdate.completed = !topicToUpdate.completed;\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    calculateCompletionPercentage();\n    saveToLocalStorage(updatedRoadmapData); // Save changes to local storage\n  };\n\n  // Calculate the percentage of completed topics\n  const calculateCompletionPercentage = () => {\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.filter(topic => topic.completed).length;\n    }, 0);\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.length;\n    }, 0);\n    setCompletionPercentage(completedTopics / totalTopics * 100 || 0);\n  };\n\n  // Add a new subject\n  const addSubject = () => {\n    if (newSubject.trim() !== '') {\n      const updatedRoadmapData = {\n        ...roadmapData,\n        subjects: [...roadmapData.subjects, {\n          id: uuidv4(),\n          name: newSubject,\n          topics: [],\n          collapsed: false // Add collapsed state\n        }]\n      };\n      setRoadmapData(updatedRoadmapData);\n      setNewSubject('');\n      saveToLocalStorage(updatedRoadmapData); // Save changes to local storage\n    } else {\n      alert('Please enter a subject name.');\n    }\n  };\n\n  // Add a new topic to a selected subject\n  const addTopic = () => {\n    if (newTopic.trim() !== '' && selectedSubjectId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      const subjectToUpdate = updatedRoadmapData.subjects.find(subject => subject.id === selectedSubjectId);\n      if (subjectToUpdate) {\n        subjectToUpdate.topics.push({\n          id: uuidv4(),\n          name: newTopic,\n          completed: false\n        });\n        setRoadmapData(updatedRoadmapData);\n        setNewTopic('');\n        saveToLocalStorage(updatedRoadmapData); // Save changes to local storage\n      } else {\n        alert('Subject not found.');\n      }\n    } else {\n      alert('Please enter a topic name and select a subject.');\n    }\n  };\n\n  // Save roadmap data to local storage\n  const saveToLocalStorage = data => {\n    localStorage.setItem('roadmapData', JSON.stringify(data));\n  };\n\n  // Re-render diagram whenever roadmap data changes\n  useEffect(() => {\n    if (graph.current) {\n      renderDiagram();\n    }\n  }, [roadmapData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubject,\n        onChange: e => setNewSubject(e.target.value),\n        placeholder: \"Subject Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSubject,\n        children: \"Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubjectId(e.target.value),\n        value: selectedSubjectId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subject.id,\n          children: subject.name\n        }, subject.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTopic,\n        onChange: e => setNewTopic(e.target.value),\n        placeholder: \"Topic Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTopic,\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paperContainer,\n      style: {\n        border: '1px solid black',\n        width: '800px',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Topics Completion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: subject.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: subject.topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: topic.completed,\n                onChange: () => handleTopicCompletionToggle(subject.id, topic.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), topic.completed && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" \\u2705 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 41\n              }, this), topic.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this)\n          }, topic.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, subject.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Overall Completion: \", completionPercentage.toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"lzxxuirwrHOczcwyfAnckkwiOMU=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","joint","v4","uuidv4","jsxDEV","_jsxDEV","RoadmapView","_s","paperContainer","graph","paper","roadmapData","setRoadmapData","savedData","localStorage","getItem","JSON","parse","subjects","newSubject","setNewSubject","newTopic","setNewTopic","selectedSubjectId","setSelectedSubjectId","completionPercentage","setCompletionPercentage","current","dia","Graph","Paper","el","model","width","height","gridSize","interactive","renderDiagram","calculateCompletionPercentage","clear","elements","links","forEach","subject","subjectIndex","completedCount","topics","filter","topic","completed","length","totalCount","progress","subjectElement","shapes","standard","Rectangle","position","resize","attr","body","fill","label","text","name","addTo","push","progressBar","currentY","topicElement","link","Link","source","target","layout","DirectedGraph","setNodePos","node","x","y","handleTopicCompletionToggle","subjectId","topicId","updatedRoadmapData","id","topicToUpdate","find","t","saveToLocalStorage","completedTopics","reduce","total","totalTopics","addSubject","trim","collapsed","alert","addTopic","subjectToUpdate","data","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","onClick","map","ref","style","border","checked","toFixed","_c","$RefreshReg$"],"sources":["D:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport * as joint from '@joint/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const graph = useRef(null);\r\n  const paper = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState(() => {\r\n    const savedData = localStorage.getItem('roadmapData');\r\n    return savedData ? JSON.parse(savedData) : { subjects: [] };\r\n  });\r\n  const [newSubject, setNewSubject] = useState('');\r\n  const [newTopic, setNewTopic] = useState('');\r\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n\r\n  // Initialize JointJS graph and paper\r\n  useEffect(() => {\r\n    graph.current = new joint.dia.Graph();\r\n    paper.current = new joint.dia.Paper({\r\n      el: paperContainer.current,\r\n      model: graph.current,\r\n      width: 800, // Fixed width\r\n      height: 600,\r\n      gridSize: 1,\r\n      interactive: false,\r\n    });\r\n\r\n    renderDiagram();\r\n    calculateCompletionPercentage();\r\n  }, []);\r\n\r\n  // Render the diagram with auto-layout\r\n  const renderDiagram = () => {\r\n    graph.current.clear();\r\n\r\n    const elements = [];\r\n    const links = [];\r\n\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const completedCount = subject.topics.filter(topic => topic.completed).length;\r\n      const totalCount = subject.topics.length;\r\n      const progress = totalCount ? (completedCount / totalCount) * 100 : 0; // Calculate progress\r\n\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100, 100 + subjectIndex * 150);\r\n      subjectElement.resize(100, 40);\r\n      subjectElement.attr({\r\n        body: { fill: 'lightblue' },\r\n        label: { text: subject.name, fill: 'black' },\r\n      });\r\n\r\n      subjectElement.addTo(graph.current);\r\n      elements.push(subjectElement);\r\n\r\n      // Create progress bar inside the subject element\r\n      const progressBar = new joint.shapes.standard.Rectangle();\r\n      progressBar.position(100, 130 + subjectIndex * 150);\r\n      progressBar.resize(progress, 10); // Set width based on progress\r\n      progressBar.attr({\r\n        body: { fill: 'green' },\r\n      });\r\n\r\n      progressBar.addTo(graph.current);\r\n      elements.push(progressBar);\r\n\r\n      // Create topics and connect them to the subject\r\n      let currentY = 150 + subjectIndex * 150; // Start below subject\r\n      subject.topics.forEach((topic) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(300, currentY);\r\n        topicElement.resize(100, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? 'lightgreen' : 'lightcoral' },\r\n          label: { text: topic.name, fill: 'black' },\r\n        });\r\n\r\n        topicElement.addTo(graph.current);\r\n        elements.push(topicElement);\r\n\r\n        const link = new joint.shapes.standard.Link();\r\n        link.source(subjectElement);\r\n        link.target(topicElement);\r\n        link.addTo(graph.current);\r\n        links.push(link);\r\n\r\n        // Update currentY for the next topic\r\n        currentY += 60; // Space between topics\r\n      });\r\n    });\r\n\r\n    // Check if layout is defined and apply auto-layout\r\n    if (joint.layout && joint.layout.DirectedGraph) {\r\n      joint.layout.DirectedGraph.layout(graph.current, {\r\n        setNodePos: (node, x, y) => {\r\n          node.position(x, y);\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // Toggle topic completion status\r\n  const handleTopicCompletionToggle = (subjectId, topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === subjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          topicToUpdate.completed = !topicToUpdate.completed;\r\n        }\r\n      }\r\n    });\r\n\r\n    setRoadmapData(updatedRoadmapData);\r\n    calculateCompletionPercentage();\r\n    saveToLocalStorage(updatedRoadmapData); // Save changes to local storage\r\n  };\r\n\r\n  // Calculate the percentage of completed topics\r\n  const calculateCompletionPercentage = () => {\r\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.filter(topic => topic.completed).length;\r\n    }, 0);\r\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.length;\r\n    }, 0);\r\n\r\n    setCompletionPercentage((completedTopics / totalTopics) * 100 || 0);\r\n  };\r\n\r\n  // Add a new subject\r\n  const addSubject = () => {\r\n    if (newSubject.trim() !== '') {\r\n      const updatedRoadmapData = {\r\n        ...roadmapData,\r\n        subjects: [\r\n          ...roadmapData.subjects,\r\n          {\r\n            id: uuidv4(),\r\n            name: newSubject,\r\n            topics: [],\r\n            collapsed: false, // Add collapsed state\r\n          },\r\n        ],\r\n      };\r\n      setRoadmapData(updatedRoadmapData);\r\n      setNewSubject('');\r\n      saveToLocalStorage(updatedRoadmapData); // Save changes to local storage\r\n    } else {\r\n      alert('Please enter a subject name.');\r\n    }\r\n  };\r\n\r\n  // Add a new topic to a selected subject\r\n  const addTopic = () => {\r\n    if (newTopic.trim() !== '' && selectedSubjectId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      const subjectToUpdate = updatedRoadmapData.subjects.find(\r\n        (subject) => subject.id === selectedSubjectId\r\n      );\r\n      if (subjectToUpdate) {\r\n        subjectToUpdate.topics.push({\r\n          id: uuidv4(),\r\n          name: newTopic,\r\n          completed: false,\r\n        });\r\n        setRoadmapData(updatedRoadmapData);\r\n        setNewTopic('');\r\n        saveToLocalStorage(updatedRoadmapData); // Save changes to local storage\r\n      } else {\r\n        alert('Subject not found.');\r\n      }\r\n    } else {\r\n      alert('Please enter a topic name and select a subject.');\r\n    }\r\n  };\r\n\r\n  // Save roadmap data to local storage\r\n  const saveToLocalStorage = (data) => {\r\n    localStorage.setItem('roadmapData', JSON.stringify(data));\r\n  };\r\n\r\n  // Re-render diagram whenever roadmap data changes\r\n  useEffect(() => {\r\n    if (graph.current) {\r\n      renderDiagram();\r\n    }\r\n  }, [roadmapData]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Add New Subject</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newSubject}\r\n          onChange={(e) => setNewSubject(e.target.value)}\r\n          placeholder=\"Subject Name\"\r\n        />\r\n        <button onClick={addSubject}>Add Subject</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Add New Topic</h3>\r\n        <select\r\n          onChange={(e) => setSelectedSubjectId(e.target.value)}\r\n          value={selectedSubjectId}\r\n        >\r\n          <option value=\"\">Select Subject</option>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <option key={subject.id} value={subject.id}>\r\n              {subject.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={newTopic}\r\n          onChange={(e) => setNewTopic(e.target.value)}\r\n          placeholder=\"Topic Name\"\r\n        />\r\n        <button onClick={addTopic}>Add Topic</button>\r\n      </div>\r\n\r\n      <div ref={paperContainer} style={{ border: '1px solid black', width: '800px', height: '600px' }} />\r\n\r\n      <h3>Topics Completion</h3>\r\n      <ul>\r\n        {roadmapData.subjects.map((subject) => (\r\n          <li key={subject.id}>\r\n            <h4>{subject.name}</h4>\r\n            <ul>\r\n              {subject.topics.map((topic) => (\r\n                <li key={topic.id}>\r\n                  <label>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={topic.completed}\r\n                      onChange={() => handleTopicCompletionToggle(subject.id, topic.id)}\r\n                    />\r\n                    {topic.completed && <span> ✅ </span>}\r\n                    {topic.name}\r\n                  </label>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <p>Overall Completion: {completionPercentage.toFixed(2)}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}