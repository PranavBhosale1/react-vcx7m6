{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid'; // For generating unique IDs\nimport { Graph, Paper } from '@jointjs/core';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialRoadmapData = {\n  subjects: [{\n    id: uuidv4(),\n    name: 'Math',\n    topics: [{\n      id: uuidv4(),\n      name: 'Algebra',\n      completed: false\n    }, {\n      id: uuidv4(),\n      name: 'Geometry',\n      completed: false\n    }]\n  }, {\n    id: uuidv4(),\n    name: 'Science',\n    topics: [{\n      id: uuidv4(),\n      name: 'Physics',\n      completed: false\n    }, {\n      id: uuidv4(),\n      name: 'Chemistry',\n      completed: false\n    }]\n  }]\n};\nfunction RoadmapView() {\n  _s();\n  const paperContainer = useRef(null);\n  const [roadmapData, setRoadmapData] = useState(initialRoadmapData);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n  useEffect(() => {\n    renderDiagram();\n  }, [roadmapData]);\n  const renderDiagram = () => {\n    const graph = new Graph();\n    const paper = new Paper({\n      el: paperContainer.current,\n      model: graph,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      snapLinks: {\n        radius: 75\n      }\n    });\n    graph.clear();\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100, 100 + subjectIndex * 150);\n      subjectElement.resize(100, 40);\n      subjectElement.attr({\n        body: {\n          fill: 'lightblue'\n        },\n        label: {\n          text: subject.name,\n          fill: 'black'\n        }\n      });\n      subjectElement.addTo(graph);\n      let currentY = 150 + subjectIndex * 150;\n      subject.topics.forEach(topic => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(300, currentY);\n        topicElement.resize(100, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? 'lightgreen' : 'lightcoral'\n          },\n          label: {\n            text: topic.name,\n            fill: 'black'\n          }\n        });\n        topicElement.addTo(graph);\n        topicElement.on('element:pointerclick', () => {\n          setSelectedTopic(topic);\n        });\n        const link = new joint.shapes.standard.Link();\n        link.source(subjectElement);\n        link.target(topicElement);\n        link.addTo(graph);\n        currentY += 60; // Space between topics\n      });\n    });\n  };\n  const markAsCompleted = () => {\n    if (!selectedTopic) return;\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      const topicToUpdate = subject.topics.find(t => t.id === selectedTopic.id);\n      if (topicToUpdate) {\n        topicToUpdate.completed = !topicToUpdate.completed;\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    setSelectedTopic({\n      ...selectedTopic,\n      completed: !selectedTopic.completed\n    });\n    renderDiagram(); // Re-render diagram to update colors\n  };\n  const editTopic = () => {\n    const newTopicName = prompt('Enter new topic name:', selectedTopic.name);\n    if (newTopicName) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      updatedRoadmapData.subjects.forEach(subject => {\n        const topicToUpdate = subject.topics.find(t => t.id === selectedTopic.id);\n        if (topicToUpdate) {\n          topicToUpdate.name = newTopicName;\n        }\n      });\n      setRoadmapData(updatedRoadmapData);\n      setSelectedTopic({\n        ...selectedTopic,\n        name: newTopicName\n      });\n      renderDiagram();\n    }\n  };\n  const deleteTopic = () => {\n    if (!selectedTopic) return;\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      subject.topics = subject.topics.filter(t => t.id !== selectedTopic.id);\n    });\n    setRoadmapData(updatedRoadmapData);\n    setSelectedTopic(null);\n    renderDiagram();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '250px',\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), selectedTopic ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: selectedTopic.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: markAsCompleted,\n          children: [\"Mark as \", selectedTopic.completed ? 'Incomplete' : 'Completed']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: editTopic,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteTopic,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a topic to see actions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paperContainer,\n      style: {\n        border: '1px solid black',\n        width: '800px',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"1els59QNHu3uq8HW+oLuusgQodU=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useRef","useEffect","useState","v4","uuidv4","Graph","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","initialRoadmapData","subjects","id","name","topics","completed","RoadmapView","_s","paperContainer","roadmapData","setRoadmapData","selectedTopic","setSelectedTopic","renderDiagram","graph","paper","el","current","model","width","height","gridSize","snapLinks","radius","clear","forEach","subject","subjectIndex","subjectElement","joint","shapes","standard","Rectangle","position","resize","attr","body","fill","label","text","addTo","currentY","topic","topicElement","on","link","Link","source","target","markAsCompleted","updatedRoadmapData","topicToUpdate","find","t","editTopic","newTopicName","prompt","deleteTopic","filter","style","display","children","padding","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","border","_c","$RefreshReg$"],"sources":["D:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid'; // For generating unique IDs\r\nimport { Graph, Paper } from '@jointjs/core';\r\n\r\nconst initialRoadmapData = {\r\n  subjects: [\r\n    { id: uuidv4(), name: 'Math', topics: [{ id: uuidv4(), name: 'Algebra', completed: false }, { id: uuidv4(), name: 'Geometry', completed: false }] },\r\n    { id: uuidv4(), name: 'Science', topics: [{ id: uuidv4(), name: 'Physics', completed: false }, { id: uuidv4(), name: 'Chemistry', completed: false }] },\r\n  ],\r\n};\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState(initialRoadmapData);\r\n  const [selectedTopic, setSelectedTopic] = useState(null);\r\n\r\n  useEffect(() => {\r\n    renderDiagram();\r\n  }, [roadmapData]);\r\n\r\n  const renderDiagram = () => {\r\n    const graph = new Graph();\r\n    const paper = new Paper({\r\n      el: paperContainer.current,\r\n      model: graph,\r\n      width: 800,\r\n      height: 600,\r\n      gridSize: 1,\r\n      snapLinks: { radius: 75 },\r\n    });\r\n\r\n    graph.clear();\r\n\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100, 100 + subjectIndex * 150);\r\n      subjectElement.resize(100, 40);\r\n      subjectElement.attr({\r\n        body: { fill: 'lightblue' },\r\n        label: { text: subject.name, fill: 'black' },\r\n      });\r\n      subjectElement.addTo(graph);\r\n\r\n      let currentY = 150 + subjectIndex * 150;\r\n      subject.topics.forEach((topic) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(300, currentY);\r\n        topicElement.resize(100, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? 'lightgreen' : 'lightcoral' },\r\n          label: { text: topic.name, fill: 'black' },\r\n        });\r\n\r\n        topicElement.addTo(graph);\r\n        topicElement.on('element:pointerclick', () => {\r\n          setSelectedTopic(topic);\r\n        });\r\n\r\n        const link = new joint.shapes.standard.Link();\r\n        link.source(subjectElement);\r\n        link.target(topicElement);\r\n        link.addTo(graph);\r\n\r\n        currentY += 60; // Space between topics\r\n      });\r\n    });\r\n  };\r\n\r\n  const markAsCompleted = () => {\r\n    if (!selectedTopic) return;\r\n\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      const topicToUpdate = subject.topics.find((t) => t.id === selectedTopic.id);\r\n      if (topicToUpdate) {\r\n        topicToUpdate.completed = !topicToUpdate.completed;\r\n      }\r\n    });\r\n\r\n    setRoadmapData(updatedRoadmapData);\r\n    setSelectedTopic({ ...selectedTopic, completed: !selectedTopic.completed });\r\n    renderDiagram(); // Re-render diagram to update colors\r\n  };\r\n\r\n  const editTopic = () => {\r\n    const newTopicName = prompt('Enter new topic name:', selectedTopic.name);\r\n    if (newTopicName) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      updatedRoadmapData.subjects.forEach((subject) => {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === selectedTopic.id);\r\n        if (topicToUpdate) {\r\n          topicToUpdate.name = newTopicName;\r\n        }\r\n      });\r\n\r\n      setRoadmapData(updatedRoadmapData);\r\n      setSelectedTopic({ ...selectedTopic, name: newTopicName });\r\n      renderDiagram();\r\n    }\r\n  };\r\n\r\n  const deleteTopic = () => {\r\n    if (!selectedTopic) return;\r\n\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      subject.topics = subject.topics.filter((t) => t.id !== selectedTopic.id);\r\n    });\r\n\r\n    setRoadmapData(updatedRoadmapData);\r\n    setSelectedTopic(null);\r\n    renderDiagram();\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div style={{ width: '250px', padding: '10px' }}>\r\n        <h3>Actions</h3>\r\n        {selectedTopic ? (\r\n          <>\r\n            <h4>{selectedTopic.name}</h4>\r\n            <button onClick={markAsCompleted}>\r\n              Mark as {selectedTopic.completed ? 'Incomplete' : 'Completed'}\r\n            </button>\r\n            <button onClick={editTopic}>Edit</button>\r\n            <button onClick={deleteTopic}>Delete</button>\r\n          </>\r\n        ) : (\r\n          <p>Select a topic to see actions.</p>\r\n        )}\r\n      </div>\r\n      <div ref={paperContainer} style={{ border: '1px solid black', width: '800px', height: '600px' }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}