{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { dia, shapes } from 'jointjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoadmapView = () => {\n  _s();\n  const graphRef = useRef(null);\n  const [subjects, setSubjects] = useState([{\n    name: 'Mathematics',\n    topics: [{\n      name: 'Algebra',\n      completed: false\n    }, {\n      name: 'Geometry',\n      completed: false\n    }]\n  }, {\n    name: 'Science',\n    topics: [{\n      name: 'Physics',\n      completed: false\n    }, {\n      name: 'Chemistry',\n      completed: false\n    }]\n  }]);\n  useEffect(() => {\n    const graph = new dia.Graph();\n    const paper = new dia.Paper({\n      el: graphRef.current,\n      model: graph,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      drawGrid: true,\n      background: {\n        color: '#f2f2f2'\n      }\n    });\n    renderDiagram(graph);\n    return () => {\n      graph.clear();\n    };\n  }, []);\n  const renderDiagram = graph => {\n    graph.clear();\n    subjects.forEach((subject, subjectIdx) => {\n      const subjectElement = new shapes.basic.Rect({\n        position: {\n          x: 50 + subjectIdx * 200,\n          y: 50\n        },\n        size: {\n          width: 100,\n          height: 40\n        },\n        attrs: {\n          rect: {\n            fill: '#f9f9f9',\n            stroke: 'black',\n            'stroke-width': 2\n          },\n          text: {\n            text: subject.name,\n            fill: 'black'\n          }\n        }\n      });\n      graph.addCell(subjectElement);\n      subject.topics.forEach((topic, topicIdx) => {\n        const topicElement = new shapes.basic.Rect({\n          position: {\n            x: 50 + subjectIdx * 200,\n            y: 100 + topicIdx * 60\n          },\n          size: {\n            width: 100,\n            height: 40\n          },\n          attrs: {\n            rect: {\n              fill: topic.completed ? '#8bc34a' : '#ff5252',\n              stroke: 'black',\n              'stroke-width': 2\n            },\n            text: {\n              text: topic.name,\n              fill: 'black'\n            }\n          }\n        });\n        graph.addCell(topicElement);\n        const link = new dia.Link({\n          source: {\n            id: subjectElement.id\n          },\n          target: {\n            id: topicElement.id\n          },\n          attrs: {\n            line: {\n              stroke: 'black',\n              'stroke-width': 2\n            }\n          }\n        });\n        graph.addCell(link);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roadmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: graphRef,\n      style: {\n        border: '1px solid black',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(RoadmapView, \"Z3YeP+mSzK3UZoRv6gRxzSwKXv4=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","dia","shapes","jsxDEV","_jsxDEV","RoadmapView","_s","graphRef","subjects","setSubjects","name","topics","completed","graph","Graph","paper","Paper","el","current","model","width","height","gridSize","drawGrid","background","color","renderDiagram","clear","forEach","subject","subjectIdx","subjectElement","basic","Rect","position","x","y","size","attrs","rect","fill","stroke","text","addCell","topic","topicIdx","topicElement","link","Link","source","id","target","line","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","border","marginBottom","_c","$RefreshReg$"],"sources":["D:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { dia, shapes } from 'jointjs';\r\n\r\nconst RoadmapView = () => {\r\n    const graphRef = useRef(null);\r\n    const [subjects, setSubjects] = useState([\r\n        {\r\n            name: 'Mathematics',\r\n            topics: [\r\n                { name: 'Algebra', completed: false },\r\n                { name: 'Geometry', completed: false },\r\n            ],\r\n        },\r\n        {\r\n            name: 'Science',\r\n            topics: [\r\n                { name: 'Physics', completed: false },\r\n                { name: 'Chemistry', completed: false },\r\n            ],\r\n        },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        const graph = new dia.Graph();\r\n\r\n        const paper = new dia.Paper({\r\n            el: graphRef.current,\r\n            model: graph,\r\n            width: 800,\r\n            height: 600,\r\n            gridSize: 1,\r\n            drawGrid: true,\r\n            background: {\r\n                color: '#f2f2f2',\r\n            },\r\n        });\r\n\r\n        renderDiagram(graph);\r\n\r\n        return () => {\r\n            graph.clear();\r\n        };\r\n    }, []);\r\n\r\n    const renderDiagram = (graph) => {\r\n        graph.clear();\r\n\r\n        subjects.forEach((subject, subjectIdx) => {\r\n            const subjectElement = new shapes.basic.Rect({\r\n                position: { x: 50 + subjectIdx * 200, y: 50 },\r\n                size: { width: 100, height: 40 },\r\n                attrs: {\r\n                    rect: { fill: '#f9f9f9', stroke: 'black', 'stroke-width': 2 },\r\n                    text: { text: subject.name, fill: 'black' },\r\n                },\r\n            });\r\n            graph.addCell(subjectElement);\r\n\r\n            subject.topics.forEach((topic, topicIdx) => {\r\n                const topicElement = new shapes.basic.Rect({\r\n                    position: { x: 50 + subjectIdx * 200, y: 100 + topicIdx * 60 },\r\n                    size: { width: 100, height: 40 },\r\n                    attrs: {\r\n                        rect: { fill: topic.completed ? '#8bc34a' : '#ff5252', stroke: 'black', 'stroke-width': 2 },\r\n                        text: { text: topic.name, fill: 'black' },\r\n                    },\r\n                });\r\n\r\n                graph.addCell(topicElement);\r\n\r\n                const link = new dia.Link({\r\n                    source: { id: subjectElement.id },\r\n                    target: { id: topicElement.id },\r\n                    attrs: { line: { stroke: 'black', 'stroke-width': 2 } },\r\n                });\r\n                graph.addCell(link);\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Roadmap</h1>\r\n            <div ref={graphRef} style={{ border: '1px solid black', marginBottom: '20px' }}></div>\r\n            {/* Add your dashboard for modifying subjects/topics here */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}