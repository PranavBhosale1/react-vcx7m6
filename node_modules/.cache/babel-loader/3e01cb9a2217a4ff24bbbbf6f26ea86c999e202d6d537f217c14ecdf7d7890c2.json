{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as joint from '@joint/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  const paperContainer = useRef(null);\n  const graph = useRef(null);\n  const [roadmapData, setRoadmapData] = useState({\n    subjects: []\n  });\n  const [newSubject, setNewSubject] = useState('');\n  const [newTopic, setNewTopic] = useState('');\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\n  const [selectedTopicId, setSelectedTopicId] = useState('');\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n\n  // Load data from localStorage when component mounts\n  useEffect(() => {\n    const savedData = localStorage.getItem('roadmapData');\n    if (savedData) {\n      setRoadmapData(JSON.parse(savedData));\n    }\n  }, []);\n\n  // Initialize JointJS Graph\n  useEffect(() => {\n    graph.current = new joint.dia.Graph();\n    const paper = new joint.dia.Paper({\n      el: paperContainer.current,\n      model: graph.current,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      interactive: {\n        elementMove: false\n      } // Disable dragging\n    });\n    renderDiagram();\n    return () => {\n      graph.current.off('element:pointerdown'); // Clean up\n    };\n  }, []);\n  const renderDiagram = () => {\n    graph.current.clear();\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100, 100 + subjectIndex * 150);\n      subjectElement.resize(100, 40);\n      subjectElement.attr({\n        body: {\n          fill: 'lightblue'\n        },\n        label: {\n          text: subject.name,\n          fill: 'black'\n        }\n      });\n      subjectElement.attr('element', {\n        draggable: false\n      });\n      subjectElement.addTo(graph.current);\n      let currentY = 150 + subjectIndex * 150;\n      subject.topics.forEach((topic, topicIndex) => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(300, currentY);\n        topicElement.resize(100, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? 'lightgreen' : 'lightcoral'\n          },\n          label: {\n            text: topic.name,\n            fill: 'black'\n          }\n        });\n        topicElement.addTo(graph.current);\n        topicElement.attr('element', {\n          draggable: false\n        });\n        const link = new joint.shapes.standard.Link();\n        if (topicIndex === 0) {\n          link.source(subjectElement);\n        } else {\n          const previousTopicElement = graph.current.getCell(subject.topics[topicIndex - 1].id);\n          link.source(previousTopicElement);\n        }\n        link.target(topicElement);\n        link.addTo(graph.current);\n\n        // Set the selected topic on click\n        topicElement.on('element:pointerdown', () => {\n          setSelectedTopicId(topic.id);\n        });\n        currentY += 60; // Space between topics\n      });\n    });\n    calculateCompletionPercentage();\n  };\n  const calculateCompletionPercentage = () => {\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.filter(topic => topic.completed).length;\n    }, 0);\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.length;\n    }, 0);\n    setCompletionPercentage(completedTopics / totalTopics * 100 || 0);\n  };\n  const saveToLocalStorage = data => {\n    localStorage.setItem('roadmapData', JSON.stringify(data));\n  };\n  const addSubject = () => {\n    if (newSubject.trim() !== '') {\n      const updatedRoadmapData = {\n        ...roadmapData,\n        subjects: [...roadmapData.subjects, {\n          id: uuidv4(),\n          name: newSubject,\n          topics: []\n        }]\n      };\n      setRoadmapData(updatedRoadmapData);\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\n      setNewSubject('');\n    } else {\n      alert('Please enter a subject name.');\n    }\n  };\n  const deleteSubject = subjectId => {\n    const updatedRoadmapData = {\n      ...roadmapData,\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId)\n    };\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    setSelectedSubjectId(''); // Clear the selected subject\n  };\n  const addTopic = () => {\n    if (newTopic.trim() !== '' && selectedSubjectId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      const subjectToUpdate = updatedRoadmapData.subjects.find(subject => subject.id === selectedSubjectId);\n      if (subjectToUpdate) {\n        const topicId = uuidv4();\n        subjectToUpdate.topics.push({\n          id: topicId,\n          name: newTopic,\n          completed: false\n        });\n        setRoadmapData(updatedRoadmapData);\n        saveToLocalStorage(updatedRoadmapData); // Save to local storage\n        setNewTopic('');\n        renderDiagram(); // Re-render diagram to reflect the changes\n      } else {\n        alert('Subject not found.');\n      }\n    } else {\n      alert('Please enter a topic name and select a subject.');\n    }\n  };\n  const markAsCompleted = () => {\n    if (selectedTopicId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      updatedRoadmapData.subjects.forEach(subject => {\n        if (subject.id === selectedSubjectId) {\n          const topicToUpdate = subject.topics.find(t => t.id === selectedTopicId);\n          if (topicToUpdate) {\n            topicToUpdate.completed = !topicToUpdate.completed;\n          }\n        }\n      });\n      setRoadmapData(updatedRoadmapData);\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\n      calculateCompletionPercentage();\n    } else {\n      alert('Please select a topic to mark as completed.');\n    }\n  };\n  const editTopic = () => {\n    if (selectedTopicId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      updatedRoadmapData.subjects.forEach(subject => {\n        if (subject.id === selectedSubjectId) {\n          const topicToUpdate = subject.topics.find(t => t.id === selectedTopicId);\n          if (topicToUpdate) {\n            const newName = prompt('Edit topic name:', topicToUpdate.name);\n            if (newName && newName.trim() !== '') {\n              topicToUpdate.name = newName.trim();\n            }\n          }\n        }\n      });\n      setRoadmapData(updatedRoadmapData);\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\n      setSelectedTopicId(''); // Clear selection after edit\n    } else {\n      alert('Please select a topic to edit.');\n    }\n  };\n  const deleteTopic = () => {\n    if (selectedTopicId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      updatedRoadmapData.subjects.forEach(subject => {\n        if (subject.id === selectedSubjectId) {\n          subject.topics = subject.topics.filter(t => t.id !== selectedTopicId);\n        }\n      });\n      setRoadmapData(updatedRoadmapData);\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\n      calculateCompletionPercentage();\n      setSelectedTopicId(''); // Clear selection after delete\n    } else {\n      alert('Please select a topic to delete.');\n    }\n  };\n  useEffect(() => {\n    if (graph.current) {\n      renderDiagram();\n    }\n  }, [roadmapData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubject,\n        onChange: e => setNewSubject(e.target.value),\n        placeholder: \"Subject Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSubject,\n        children: \"Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [subject.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteSubject(subject.id),\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, subject.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubjectId(e.target.value),\n        value: selectedSubjectId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subject.id,\n          children: subject.name\n        }, subject.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTopic,\n        onChange: e => setNewTopic(e.target.value),\n        placeholder: \"Topic Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTopic,\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit/Delete Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: markAsCompleted,\n        disabled: !selectedTopicId,\n        children: \"Mark as Completed/Incomplete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: editTopic,\n        disabled: !selectedTopicId,\n        children: \"Edit Selected Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteTopic,\n        disabled: !selectedTopicId,\n        children: \"Delete Selected Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paperContainer,\n      style: {\n        border: '1px solid black',\n        width: '800px',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Overall Completion: \", completionPercentage.toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"u92R5glknH75U84oHmaIJ7ZEgn4=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","joint","v4","uuidv4","jsxDEV","_jsxDEV","RoadmapView","_s","paperContainer","graph","roadmapData","setRoadmapData","subjects","newSubject","setNewSubject","newTopic","setNewTopic","selectedSubjectId","setSelectedSubjectId","selectedTopicId","setSelectedTopicId","completionPercentage","setCompletionPercentage","savedData","localStorage","getItem","JSON","parse","current","dia","Graph","paper","Paper","el","model","width","height","gridSize","interactive","elementMove","renderDiagram","off","clear","forEach","subject","subjectIndex","subjectElement","shapes","standard","Rectangle","position","resize","attr","body","fill","label","text","name","draggable","addTo","currentY","topics","topic","topicIndex","topicElement","completed","link","Link","source","previousTopicElement","getCell","id","target","on","calculateCompletionPercentage","completedTopics","reduce","total","filter","length","totalTopics","saveToLocalStorage","data","setItem","stringify","addSubject","trim","updatedRoadmapData","alert","deleteSubject","subjectId","addTopic","subjectToUpdate","find","topicId","push","markAsCompleted","topicToUpdate","t","editTopic","newName","prompt","deleteTopic","style","display","children","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","onClick","map","marginLeft","disabled","ref","border","toFixed","_c","$RefreshReg$"],"sources":["D:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport * as joint from '@joint/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const graph = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState({ subjects: [] });\r\n  const [newSubject, setNewSubject] = useState('');\r\n  const [newTopic, setNewTopic] = useState('');\r\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\r\n  const [selectedTopicId, setSelectedTopicId] = useState('');\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n\r\n  // Load data from localStorage when component mounts\r\n  useEffect(() => {\r\n    const savedData = localStorage.getItem('roadmapData');\r\n    if (savedData) {\r\n      setRoadmapData(JSON.parse(savedData));\r\n    }\r\n  }, []);\r\n\r\n  // Initialize JointJS Graph\r\n  useEffect(() => {\r\n    graph.current = new joint.dia.Graph();\r\n    const paper = new joint.dia.Paper({\r\n      el: paperContainer.current,\r\n      model: graph.current,\r\n      width: 800,\r\n      height: 600,\r\n      gridSize: 1,\r\n      interactive: { elementMove: false }, // Disable dragging\r\n    });\r\n\r\n    renderDiagram();\r\n\r\n    return () => {\r\n      graph.current.off('element:pointerdown'); // Clean up\r\n    };\r\n  }, []);\r\n\r\n  const renderDiagram = () => {\r\n    graph.current.clear();\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100, 100 + subjectIndex * 150);\r\n      subjectElement.resize(100, 40);\r\n      subjectElement.attr({\r\n        body: { fill: 'lightblue' },\r\n        label: { text: subject.name, fill: 'black' },\r\n      });\r\n\r\n      subjectElement.attr('element', { draggable: false });\r\n      subjectElement.addTo(graph.current);\r\n\r\n      let currentY = 150 + subjectIndex * 150;\r\n      subject.topics.forEach((topic, topicIndex) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(300, currentY);\r\n        topicElement.resize(100, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? 'lightgreen' : 'lightcoral' },\r\n          label: { text: topic.name, fill: 'black' },\r\n        });\r\n\r\n        topicElement.addTo(graph.current);\r\n        topicElement.attr('element', { draggable: false });\r\n\r\n        const link = new joint.shapes.standard.Link();\r\n        if (topicIndex === 0) {\r\n          link.source(subjectElement);\r\n        } else {\r\n          const previousTopicElement = graph.current.getCell(subject.topics[topicIndex - 1].id);\r\n          link.source(previousTopicElement);\r\n        }\r\n        link.target(topicElement);\r\n        link.addTo(graph.current);\r\n\r\n        // Set the selected topic on click\r\n        topicElement.on('element:pointerdown', () => {\r\n          setSelectedTopicId(topic.id);\r\n        });\r\n\r\n        currentY += 60; // Space between topics\r\n      });\r\n    });\r\n\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  const calculateCompletionPercentage = () => {\r\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.filter(topic => topic.completed).length;\r\n    }, 0);\r\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.length;\r\n    }, 0);\r\n    setCompletionPercentage((completedTopics / totalTopics) * 100 || 0);\r\n  };\r\n\r\n  const saveToLocalStorage = (data) => {\r\n    localStorage.setItem('roadmapData', JSON.stringify(data));\r\n  };\r\n\r\n  const addSubject = () => {\r\n    if (newSubject.trim() !== '') {\r\n      const updatedRoadmapData = {\r\n        ...roadmapData,\r\n        subjects: [\r\n          ...roadmapData.subjects,\r\n          {\r\n            id: uuidv4(),\r\n            name: newSubject,\r\n            topics: [],\r\n          },\r\n        ],\r\n      };\r\n      setRoadmapData(updatedRoadmapData);\r\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n      setNewSubject('');\r\n    } else {\r\n      alert('Please enter a subject name.');\r\n    }\r\n  };\r\n\r\n  const deleteSubject = (subjectId) => {\r\n    const updatedRoadmapData = {\r\n      ...roadmapData,\r\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId),\r\n    };\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    setSelectedSubjectId(''); // Clear the selected subject\r\n  };\r\n\r\n  const addTopic = () => {\r\n    if (newTopic.trim() !== '' && selectedSubjectId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      const subjectToUpdate = updatedRoadmapData.subjects.find(\r\n        (subject) => subject.id === selectedSubjectId\r\n      );\r\n      if (subjectToUpdate) {\r\n        const topicId = uuidv4();\r\n        subjectToUpdate.topics.push({\r\n          id: topicId,\r\n          name: newTopic,\r\n          completed: false,\r\n        });\r\n        setRoadmapData(updatedRoadmapData);\r\n        saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n        setNewTopic('');\r\n        renderDiagram(); // Re-render diagram to reflect the changes\r\n      } else {\r\n        alert('Subject not found.');\r\n      }\r\n    } else {\r\n      alert('Please enter a topic name and select a subject.');\r\n    }\r\n  };\r\n\r\n  const markAsCompleted = () => {\r\n    if (selectedTopicId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      updatedRoadmapData.subjects.forEach((subject) => {\r\n        if (subject.id === selectedSubjectId) {\r\n          const topicToUpdate = subject.topics.find((t) => t.id === selectedTopicId);\r\n          if (topicToUpdate) {\r\n            topicToUpdate.completed = !topicToUpdate.completed;\r\n          }\r\n        }\r\n      });\r\n      setRoadmapData(updatedRoadmapData);\r\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n      calculateCompletionPercentage();\r\n    } else {\r\n      alert('Please select a topic to mark as completed.');\r\n    }\r\n  };\r\n\r\n  const editTopic = () => {\r\n    if (selectedTopicId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      updatedRoadmapData.subjects.forEach((subject) => {\r\n        if (subject.id === selectedSubjectId) {\r\n          const topicToUpdate = subject.topics.find((t) => t.id === selectedTopicId);\r\n          if (topicToUpdate) {\r\n            const newName = prompt('Edit topic name:', topicToUpdate.name);\r\n            if (newName && newName.trim() !== '') {\r\n              topicToUpdate.name = newName.trim();\r\n            }\r\n          }\r\n        }\r\n      });\r\n      setRoadmapData(updatedRoadmapData);\r\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n      setSelectedTopicId(''); // Clear selection after edit\r\n    } else {\r\n      alert('Please select a topic to edit.');\r\n    }\r\n  };\r\n\r\n  const deleteTopic = () => {\r\n    if (selectedTopicId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      updatedRoadmapData.subjects.forEach((subject) => {\r\n        if (subject.id === selectedSubjectId) {\r\n          subject.topics = subject.topics.filter((t) => t.id !== selectedTopicId);\r\n        }\r\n      });\r\n      setRoadmapData(updatedRoadmapData);\r\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n      calculateCompletionPercentage();\r\n      setSelectedTopicId(''); // Clear selection after delete\r\n    } else {\r\n      alert('Please select a topic to delete.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graph.current) {\r\n      renderDiagram();\r\n    }\r\n  }, [roadmapData]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div style={{ marginRight: '20px' }}>\r\n        <h3>Add New Subject</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newSubject}\r\n          onChange={(e) => setNewSubject(e.target.value)}\r\n          placeholder=\"Subject Name\"\r\n        />\r\n        <button onClick={addSubject}>Add Subject</button>\r\n        <h3>Existing Subjects</h3>\r\n        <ul>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <li key={subject.id}>\r\n              {subject.name}\r\n              <button onClick={() => deleteSubject(subject.id)} style={{ marginLeft: '10px' }}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div style={{ marginRight: '20px' }}>\r\n        <h3>Add New Topic</h3>\r\n        <select\r\n          onChange={(e) => setSelectedSubjectId(e.target.value)}\r\n          value={selectedSubjectId}\r\n        >\r\n          <option value=\"\">Select Subject</option>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <option key={subject.id} value={subject.id}>\r\n              {subject.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={newTopic}\r\n          onChange={(e) => setNewTopic(e.target.value)}\r\n          placeholder=\"Topic Name\"\r\n        />\r\n        <button onClick={addTopic}>Add Topic</button>\r\n        <h3>Edit/Delete Topic</h3>\r\n        <button onClick={markAsCompleted} disabled={!selectedTopicId}>Mark as Completed/Incomplete</button>\r\n        <button onClick={editTopic} disabled={!selectedTopicId}>Edit Selected Topic</button>\r\n        <button onClick={deleteTopic} disabled={!selectedTopicId}>Delete Selected Topic</button>\r\n      </div>\r\n\r\n      <div ref={paperContainer} style={{ border: '1px solid black', width: '800px', height: '600px' }} />\r\n      <p>Overall Completion: {completionPercentage.toFixed(2)}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}