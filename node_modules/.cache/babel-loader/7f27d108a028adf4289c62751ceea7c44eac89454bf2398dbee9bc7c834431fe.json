{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { dia } from 'jointjs';\nimport 'jointjs/dist/joint.css';\nimport './RoadmapView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Graph,\n  Paper,\n  Element,\n  Link\n} = dia;\nfunction RoadmapView() {\n  _s();\n  const graphRef = useRef(null);\n  const paperRef = useRef(null);\n  const [graph, setGraph] = useState(null);\n  const [paper, setPaper] = useState(null);\n  const [subjects, setSubjects] = useState([{\n    id: 'subject1',\n    name: 'Math',\n    topics: [{\n      id: 'topic1',\n      name: 'Algebra',\n      completed: false\n    }]\n  }, {\n    id: 'subject2',\n    name: 'Science',\n    topics: [{\n      id: 'topic2',\n      name: 'Physics',\n      completed: false\n    }]\n  }]);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n  useEffect(() => {\n    const g = new Graph();\n    setGraph(g);\n    const p = new Paper({\n      el: paperRef.current,\n      model: g,\n      width: 800,\n      height: 600,\n      gridSize: 10,\n      drawGrid: true,\n      interactive: false\n    });\n    setPaper(p);\n    return () => {\n      p.remove();\n      g.clear();\n    };\n  }, []);\n  useEffect(() => {\n    if (graph) {\n      renderDiagram();\n    }\n  }, [graph, subjects]);\n  const renderDiagram = () => {\n    graph.clear(); // Clear previous diagram\n\n    subjects.forEach((subject, subjectIdx) => {\n      const subjectElement = new joint.shapes.basic.Rect({\n        position: {\n          x: 50 + subjectIdx * 200,\n          y: 50\n        },\n        size: {\n          width: 100,\n          height: 40\n        },\n        attrs: {\n          rect: {\n            fill: '#f9f9f9',\n            stroke: 'black',\n            'stroke-width': 2\n          },\n          text: {\n            text: subject.name,\n            fill: 'black'\n          }\n        }\n      });\n      graph.addCell(subjectElement);\n      subject.topics.forEach((topic, topicIdx) => {\n        const topicElement = new joint.shapes.basic.Rect({\n          position: {\n            x: 50 + subjectIdx * 200,\n            y: 100 + topicIdx * 60\n          },\n          size: {\n            width: 100,\n            height: 40\n          },\n          attrs: {\n            rect: {\n              fill: topic.completed ? '#8bc34a' : '#ff5252',\n              stroke: 'black',\n              'stroke-width': 2\n            },\n            text: {\n              text: topic.name,\n              fill: 'black'\n            }\n          }\n        });\n        graph.addCell(topicElement);\n        const link = new joint.shapes.standard.Link({\n          source: {\n            id: subjectElement.id\n          },\n          target: {\n            id: topicElement.id\n          },\n          attrs: {\n            line: {\n              stroke: 'black',\n              'stroke-width': 2\n            }\n          }\n        });\n        graph.addCell(link);\n        topicElement.on('element:pointerclick', () => handleTopicClick(subject.id, topic.id));\n      });\n    });\n  };\n  const handleTopicClick = (subjectId, topicId) => {\n    const updatedSubjects = subjects.map(subject => {\n      if (subject.id === subjectId) {\n        return {\n          ...subject,\n          topics: subject.topics.map(topic => topic.id === topicId ? {\n            ...topic,\n            completed: !topic.completed\n          } : topic)\n        };\n      }\n      return subject;\n    });\n    setSubjects(updatedSubjects);\n  };\n  const handleDeleteTopic = (subjectId, topicId) => {\n    const updatedSubjects = subjects.map(subject => {\n      if (subject.id === subjectId) {\n        return {\n          ...subject,\n          topics: subject.topics.filter(topic => topic.id !== topicId)\n        };\n      }\n      return subject;\n    });\n    setSubjects(updatedSubjects);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roadmap-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paperRef,\n      className: \"roadmap-paper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roadmap-sidebar\",\n      children: selectedTopic && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedTopic.name,\n          onChange: e => handleTopicClick(selectedTopic.subjectId, selectedTopic.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTopic(selectedTopic.subjectId, selectedTopic.id),\n          children: \"Delete Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n_s(RoadmapView, \"SYHNma9mywVNA52JzgRJmS5J1rQ=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","dia","jsxDEV","_jsxDEV","Graph","Paper","Element","Link","RoadmapView","_s","graphRef","paperRef","graph","setGraph","paper","setPaper","subjects","setSubjects","id","name","topics","completed","selectedTopic","setSelectedTopic","g","p","el","current","model","width","height","gridSize","drawGrid","interactive","remove","clear","renderDiagram","forEach","subject","subjectIdx","subjectElement","joint","shapes","basic","Rect","position","x","y","size","attrs","rect","fill","stroke","text","addCell","topic","topicIdx","topicElement","link","standard","source","target","line","on","handleTopicClick","subjectId","topicId","updatedSubjects","map","handleDeleteTopic","filter","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","onClick","_c","$RefreshReg$"],"sources":["D:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { dia } from 'jointjs';\r\nimport 'jointjs/dist/joint.css';\r\nimport './RoadmapView.css';\r\n\r\nconst { Graph, Paper, Element, Link } = dia;\r\n\r\nfunction RoadmapView() {\r\n    const graphRef = useRef(null);\r\n    const paperRef = useRef(null);\r\n    const [graph, setGraph] = useState(null);\r\n    const [paper, setPaper] = useState(null);\r\n    const [subjects, setSubjects] = useState([\r\n        { id: 'subject1', name: 'Math', topics: [{ id: 'topic1', name: 'Algebra', completed: false }] },\r\n        { id: 'subject2', name: 'Science', topics: [{ id: 'topic2', name: 'Physics', completed: false }] }\r\n    ]);\r\n    const [selectedTopic, setSelectedTopic] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const g = new Graph();\r\n        setGraph(g);\r\n\r\n        const p = new Paper({\r\n            el: paperRef.current,\r\n            model: g,\r\n            width: 800,\r\n            height: 600,\r\n            gridSize: 10,\r\n            drawGrid: true,\r\n            interactive: false\r\n        });\r\n        setPaper(p);\r\n\r\n        return () => {\r\n            p.remove();\r\n            g.clear();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (graph) {\r\n            renderDiagram();\r\n        }\r\n    }, [graph, subjects]);\r\n\r\n    const renderDiagram = () => {\r\n      graph.clear(); // Clear previous diagram\r\n  \r\n      subjects.forEach((subject, subjectIdx) => {\r\n          const subjectElement = new joint.shapes.basic.Rect({\r\n              position: { x: 50 + subjectIdx * 200, y: 50 },\r\n              size: { width: 100, height: 40 },\r\n              attrs: {\r\n                  rect: { fill: '#f9f9f9', stroke: 'black', 'stroke-width': 2 },\r\n                  text: { text: subject.name, fill: 'black' }\r\n              }\r\n          });\r\n          graph.addCell(subjectElement);\r\n  \r\n          subject.topics.forEach((topic, topicIdx) => {\r\n              const topicElement = new joint.shapes.basic.Rect({\r\n                  position: { x: 50 + subjectIdx * 200, y: 100 + topicIdx * 60 },\r\n                  size: { width: 100, height: 40 },\r\n                  attrs: {\r\n                      rect: { fill: topic.completed ? '#8bc34a' : '#ff5252', stroke: 'black', 'stroke-width': 2 },\r\n                      text: { text: topic.name, fill: 'black' }\r\n                  }\r\n              });\r\n  \r\n              graph.addCell(topicElement);\r\n  \r\n              const link = new joint.shapes.standard.Link({\r\n                  source: { id: subjectElement.id },\r\n                  target: { id: topicElement.id },\r\n                  attrs: { line: { stroke: 'black', 'stroke-width': 2 } }\r\n              });\r\n              graph.addCell(link);\r\n  \r\n              topicElement.on('element:pointerclick', () => handleTopicClick(subject.id, topic.id));\r\n          });\r\n      });\r\n  };\r\n\r\n    const handleTopicClick = (subjectId, topicId) => {\r\n        const updatedSubjects = subjects.map((subject) => {\r\n            if (subject.id === subjectId) {\r\n                return {\r\n                    ...subject,\r\n                    topics: subject.topics.map((topic) =>\r\n                        topic.id === topicId ? { ...topic, completed: !topic.completed } : topic\r\n                    )\r\n                };\r\n            }\r\n            return subject;\r\n        });\r\n\r\n        setSubjects(updatedSubjects);\r\n    };\r\n\r\n    const handleDeleteTopic = (subjectId, topicId) => {\r\n        const updatedSubjects = subjects.map((subject) => {\r\n            if (subject.id === subjectId) {\r\n                return {\r\n                    ...subject,\r\n                    topics: subject.topics.filter((topic) => topic.id !== topicId)\r\n                };\r\n            }\r\n            return subject;\r\n        });\r\n\r\n        setSubjects(updatedSubjects);\r\n    };\r\n\r\n    return (\r\n        <div className=\"roadmap-container\">\r\n            <div ref={paperRef} className=\"roadmap-paper\" />\r\n            <div className=\"roadmap-sidebar\">\r\n                {selectedTopic && (\r\n                    <div className=\"topic-details\">\r\n                        <h3>Edit Topic</h3>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={selectedTopic.name}\r\n                            onChange={(e) => handleTopicClick(selectedTopic.subjectId, selectedTopic.id, e.target.value)}\r\n                        />\r\n                        <button onClick={() => handleDeleteTopic(selectedTopic.subjectId, selectedTopic.id)}>\r\n                            Delete Topic\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}