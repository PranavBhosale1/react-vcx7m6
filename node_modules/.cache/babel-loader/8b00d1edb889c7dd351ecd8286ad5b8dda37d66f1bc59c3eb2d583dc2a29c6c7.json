{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as joint from '@joint/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  var _roadmapData$subjects;\n  const paperContainer = useRef(null);\n  const graph = useRef(null);\n  const [roadmapData, setRoadmapData] = useState({\n    subjects: []\n  });\n  const [newSubject, setNewSubject] = useState('');\n  const [newTopic, setNewTopic] = useState('');\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n  useEffect(() => {\n    // Load the roadmap data from local storage\n    const storedData = localStorage.getItem('roadmapData');\n    if (storedData) {\n      setRoadmapData(JSON.parse(storedData));\n    }\n\n    // Initialize the graph\n    graph.current = new joint.dia.Graph();\n    const paper = new joint.dia.Paper({\n      el: paperContainer.current,\n      model: graph.current,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      interactive: {\n        elementMove: false\n      } // Disable dragging\n    });\n    renderDiagram();\n    calculateCompletionPercentage();\n    return () => {\n      graph.current.off('element:pointerdown'); // Clean up\n    };\n  }, []);\n\n  // Function to save roadmap data to local storage\n  const saveToLocalStorage = data => {\n    localStorage.setItem('roadmapData', JSON.stringify(data));\n  };\n  const renderDiagram = (newTopicData = null, newTopicIndex = null) => {\n    graph.current.clear();\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100, 100 + subjectIndex * 150);\n      subjectElement.resize(100, 40);\n      subjectElement.attr({\n        body: {\n          fill: 'lightblue'\n        },\n        label: {\n          text: subject.name,\n          fill: 'black'\n        }\n      });\n      subjectElement.attr('element', {\n        draggable: false\n      });\n      subjectElement.addTo(graph.current);\n      let currentY = 150 + subjectIndex * 150;\n      subject.topics.forEach((topic, topicIndex) => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(300, currentY);\n        topicElement.resize(100, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? 'lightgreen' : 'lightcoral'\n          },\n          label: {\n            text: topic.name,\n            fill: 'black'\n          }\n        });\n        topicElement.addTo(graph.current);\n        topicElement.attr('element', {\n          draggable: false\n        });\n        const link = new joint.shapes.standard.Link();\n        if (topicIndex === 0) {\n          // Connect first topic to the subject\n          link.source(subjectElement);\n        } else {\n          // Connect subsequent topics to the previous topic\n          const previousTopicElement = graph.current.getCell(subject.topics[topicIndex - 1].id);\n          link.source(previousTopicElement);\n        }\n        link.target(topicElement);\n        link.addTo(graph.current);\n        currentY += 60; // Space between topics\n      });\n\n      // Link newly added topic to the last one if it exists\n      if (newTopicData && newTopicIndex !== null) {\n        const lastTopicElement = graph.current.getCell(subject.topics[newTopicIndex - 1].id);\n        const newTopicElement = graph.current.getCell(newTopicData.id);\n        const newLink = new joint.shapes.standard.Link();\n        newLink.source(lastTopicElement);\n        newLink.target(newTopicElement);\n        newLink.addTo(graph.current);\n      }\n    });\n  };\n  const calculateCompletionPercentage = () => {\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.filter(topic => topic.completed).length;\n    }, 0);\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.length;\n    }, 0);\n    setCompletionPercentage(completedTopics / totalTopics * 100 || 0);\n  };\n  const addSubject = () => {\n    if (newSubject.trim() !== '') {\n      const updatedRoadmapData = {\n        ...roadmapData,\n        subjects: [...roadmapData.subjects, {\n          id: uuidv4(),\n          name: newSubject,\n          topics: []\n        }]\n      };\n      setRoadmapData(updatedRoadmapData);\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\n      setNewSubject('');\n    } else {\n      alert('Please enter a subject name.');\n    }\n  };\n  const deleteSubject = subjectId => {\n    const updatedRoadmapData = {\n      ...roadmapData,\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId)\n    };\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    setSelectedSubjectId(''); // Clear the selected subject\n  };\n  const addTopic = () => {\n    if (newTopic.trim() !== '' && selectedSubjectId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      const subjectToUpdate = updatedRoadmapData.subjects.find(subject => subject.id === selectedSubjectId);\n      if (subjectToUpdate) {\n        const topicId = uuidv4();\n        const newTopicData = {\n          id: topicId,\n          name: newTopic,\n          completed: false\n        };\n        subjectToUpdate.topics.push(newTopicData);\n\n        // Render the updated diagram\n        renderDiagram(newTopicData, subjectToUpdate.topics.length - 1); // Pass the new topic and its index\n\n        setRoadmapData(updatedRoadmapData);\n        saveToLocalStorage(updatedRoadmapData); // Save to local storage\n        setNewTopic('');\n      } else {\n        alert('Subject not found.');\n      }\n    } else {\n      alert('Please enter a topic name and select a subject.');\n    }\n  };\n  const markAsCompleted = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          topicToUpdate.completed = !topicToUpdate.completed;\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    calculateCompletionPercentage();\n  };\n  const editTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\n          if (newName && newName.trim() !== '') {\n            topicToUpdate.name = newName.trim();\n          }\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n  };\n  const deleteTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        subject.topics = subject.topics.filter(t => t.id !== topicId);\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\n    calculateCompletionPercentage();\n  };\n  useEffect(() => {\n    if (graph.current) {\n      renderDiagram();\n    }\n  }, [roadmapData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubject,\n        onChange: e => setNewSubject(e.target.value),\n        placeholder: \"Subject Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSubject,\n        children: \"Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [subject.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteSubject(subject.id),\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, subject.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubjectId(e.target.value),\n        value: selectedSubjectId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subject.id,\n          children: subject.name\n        }, subject.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTopic,\n        onChange: e => setNewTopic(e.target.value),\n        placeholder: \"Topic Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTopic,\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Completion Percentage: \", completionPercentage.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Topics for Selected Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_roadmapData$subjects = roadmapData.subjects.find(subject => subject.id === selectedSubjectId)) === null || _roadmapData$subjects === void 0 ? void 0 : _roadmapData$subjects.topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [topic.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => markAsCompleted(topic.id),\n            style: {\n              marginLeft: '10px'\n            },\n            children: topic.completed ? 'Undo' : 'Complete'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editTopic(topic.id),\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTopic(topic.id),\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this)]\n        }, topic.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px',\n        border: '1px solid #ccc',\n        padding: '10px'\n      },\n      ref: paperContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"YYiBufMuied5EDqcF3FwBmNPaSg=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","joint","v4","uuidv4","jsxDEV","_jsxDEV","RoadmapView","_s","_roadmapData$subjects","paperContainer","graph","roadmapData","setRoadmapData","subjects","newSubject","setNewSubject","newTopic","setNewTopic","selectedSubjectId","setSelectedSubjectId","completionPercentage","setCompletionPercentage","storedData","localStorage","getItem","JSON","parse","current","dia","Graph","paper","Paper","el","model","width","height","gridSize","interactive","elementMove","renderDiagram","calculateCompletionPercentage","off","saveToLocalStorage","data","setItem","stringify","newTopicData","newTopicIndex","clear","forEach","subject","subjectIndex","subjectElement","shapes","standard","Rectangle","position","resize","attr","body","fill","label","text","name","draggable","addTo","currentY","topics","topic","topicIndex","topicElement","completed","link","Link","source","previousTopicElement","getCell","id","target","lastTopicElement","newTopicElement","newLink","completedTopics","reduce","total","filter","length","totalTopics","addSubject","trim","updatedRoadmapData","alert","deleteSubject","subjectId","addTopic","subjectToUpdate","find","topicId","push","markAsCompleted","topicToUpdate","t","editTopic","newName","prompt","deleteTopic","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","onClick","map","marginLeft","toFixed","border","padding","ref","_c","$RefreshReg$"],"sources":["C:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport * as joint from '@joint/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const graph = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState({ subjects: [] });\r\n  const [newSubject, setNewSubject] = useState('');\r\n  const [newTopic, setNewTopic] = useState('');\r\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Load the roadmap data from local storage\r\n    const storedData = localStorage.getItem('roadmapData');\r\n    if (storedData) {\r\n      setRoadmapData(JSON.parse(storedData));\r\n    }\r\n\r\n    // Initialize the graph\r\n    graph.current = new joint.dia.Graph();\r\n    const paper = new joint.dia.Paper({\r\n      el: paperContainer.current,\r\n      model: graph.current,\r\n      width: 800,\r\n      height: 600,\r\n      gridSize: 1,\r\n      interactive: { elementMove: false }, // Disable dragging\r\n    });\r\n\r\n    renderDiagram();\r\n    calculateCompletionPercentage();\r\n\r\n    return () => {\r\n      graph.current.off('element:pointerdown'); // Clean up\r\n    };\r\n  }, []);\r\n\r\n  // Function to save roadmap data to local storage\r\n  const saveToLocalStorage = (data) => {\r\n    localStorage.setItem('roadmapData', JSON.stringify(data));\r\n  };\r\n\r\n  const renderDiagram = (newTopicData = null, newTopicIndex = null) => {\r\n    graph.current.clear();\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100, 100 + subjectIndex * 150);\r\n      subjectElement.resize(100, 40);\r\n      subjectElement.attr({\r\n        body: { fill: 'lightblue' },\r\n        label: { text: subject.name, fill: 'black' },\r\n      });\r\n\r\n      subjectElement.attr('element', { draggable: false });\r\n      subjectElement.addTo(graph.current);\r\n\r\n      let currentY = 150 + subjectIndex * 150;\r\n      subject.topics.forEach((topic, topicIndex) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(300, currentY);\r\n        topicElement.resize(100, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? 'lightgreen' : 'lightcoral' },\r\n          label: { text: topic.name, fill: 'black' },\r\n        });\r\n\r\n        topicElement.addTo(graph.current);\r\n        topicElement.attr('element', { draggable: false });\r\n\r\n        const link = new joint.shapes.standard.Link();\r\n        if (topicIndex === 0) {\r\n          // Connect first topic to the subject\r\n          link.source(subjectElement);\r\n        } else {\r\n          // Connect subsequent topics to the previous topic\r\n          const previousTopicElement = graph.current.getCell(subject.topics[topicIndex - 1].id);\r\n          link.source(previousTopicElement);\r\n        }\r\n        link.target(topicElement);\r\n        link.addTo(graph.current);\r\n\r\n        currentY += 60; // Space between topics\r\n      });\r\n\r\n      // Link newly added topic to the last one if it exists\r\n      if (newTopicData && newTopicIndex !== null) {\r\n        const lastTopicElement = graph.current.getCell(subject.topics[newTopicIndex - 1].id);\r\n        const newTopicElement = graph.current.getCell(newTopicData.id);\r\n        const newLink = new joint.shapes.standard.Link();\r\n        newLink.source(lastTopicElement);\r\n        newLink.target(newTopicElement);\r\n        newLink.addTo(graph.current);\r\n      }\r\n    });\r\n  };\r\n\r\n  const calculateCompletionPercentage = () => {\r\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.filter(topic => topic.completed).length;\r\n    }, 0);\r\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.length;\r\n    }, 0);\r\n    setCompletionPercentage((completedTopics / totalTopics) * 100 || 0);\r\n  };\r\n\r\n  const addSubject = () => {\r\n    if (newSubject.trim() !== '') {\r\n      const updatedRoadmapData = {\r\n        ...roadmapData,\r\n        subjects: [\r\n          ...roadmapData.subjects,\r\n          {\r\n            id: uuidv4(),\r\n            name: newSubject,\r\n            topics: [],\r\n          },\r\n        ],\r\n      };\r\n      setRoadmapData(updatedRoadmapData);\r\n      saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n      setNewSubject('');\r\n    } else {\r\n      alert('Please enter a subject name.');\r\n    }\r\n  };\r\n\r\n  const deleteSubject = (subjectId) => {\r\n    const updatedRoadmapData = {\r\n      ...roadmapData,\r\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId),\r\n    };\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    setSelectedSubjectId(''); // Clear the selected subject\r\n  };\r\n\r\n  const addTopic = () => {\r\n    if (newTopic.trim() !== '' && selectedSubjectId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      const subjectToUpdate = updatedRoadmapData.subjects.find(\r\n        (subject) => subject.id === selectedSubjectId\r\n      );\r\n      if (subjectToUpdate) {\r\n        const topicId = uuidv4();\r\n        const newTopicData = {\r\n          id: topicId,\r\n          name: newTopic,\r\n          completed: false,\r\n        };\r\n        subjectToUpdate.topics.push(newTopicData);\r\n\r\n        // Render the updated diagram\r\n        renderDiagram(newTopicData, subjectToUpdate.topics.length - 1); // Pass the new topic and its index\r\n\r\n        setRoadmapData(updatedRoadmapData);\r\n        saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n        setNewTopic('');\r\n      } else {\r\n        alert('Subject not found.');\r\n      }\r\n    } else {\r\n      alert('Please enter a topic name and select a subject.');\r\n    }\r\n  };\r\n\r\n  const markAsCompleted = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          topicToUpdate.completed = !topicToUpdate.completed;\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  const editTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\r\n          if (newName && newName.trim() !== '') {\r\n            topicToUpdate.name = newName.trim();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n  };\r\n\r\n  const deleteTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        subject.topics = subject.topics.filter((t) => t.id !== topicId);\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    saveToLocalStorage(updatedRoadmapData); // Save to local storage\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graph.current) {\r\n      renderDiagram();\r\n    }\r\n  }, [roadmapData]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div>\r\n        <h3>Add New Subject</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newSubject}\r\n          onChange={(e) => setNewSubject(e.target.value)}\r\n          placeholder=\"Subject Name\"\r\n        />\r\n        <button onClick={addSubject}>Add Subject</button>\r\n        <h3>Existing Subjects</h3>\r\n        <ul>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <li key={subject.id}>\r\n              {subject.name}\r\n              <button onClick={() => deleteSubject(subject.id)} style={{ marginLeft: '10px' }}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Add New Topic</h3>\r\n        <select\r\n          onChange={(e) => setSelectedSubjectId(e.target.value)}\r\n          value={selectedSubjectId}\r\n        >\r\n          <option value=\"\">Select Subject</option>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <option key={subject.id} value={subject.id}>\r\n              {subject.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={newTopic}\r\n          onChange={(e) => setNewTopic(e.target.value)}\r\n          placeholder=\"Topic Name\"\r\n        />\r\n        <button onClick={addTopic}>Add Topic</button>\r\n        <h3>Completion Percentage: {completionPercentage.toFixed(2)}%</h3>\r\n        <h3>Topics for Selected Subject</h3>\r\n        <ul>\r\n          {roadmapData.subjects\r\n            .find(subject => subject.id === selectedSubjectId)?.topics.map((topic) => (\r\n              <li key={topic.id}>\r\n                {topic.name}\r\n                <button onClick={() => markAsCompleted(topic.id)} style={{ marginLeft: '10px' }}>\r\n                  {topic.completed ? 'Undo' : 'Complete'}\r\n                </button>\r\n                <button onClick={() => editTopic(topic.id)} style={{ marginLeft: '10px' }}>Edit</button>\r\n                <button onClick={() => deleteTopic(topic.id)} style={{ marginLeft: '10px' }}>Delete</button>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div style={{ marginLeft: '20px', border: '1px solid #ccc', padding: '10px' }} ref={paperContainer}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}