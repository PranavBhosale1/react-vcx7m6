{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as joint from '@joint/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport './RoadmapView.css'; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  var _roadmapData$subjects;\n  const paperContainer = useRef(null);\n  const graph = useRef(null);\n  const [roadmapData, setRoadmapData] = useState({\n    subjects: []\n  });\n  const [newSubject, setNewSubject] = useState('');\n  const [newTopic, setNewTopic] = useState('');\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n  useEffect(() => {\n    graph.current = new joint.dia.Graph();\n    const paper = new joint.dia.Paper({\n      el: paperContainer.current,\n      model: graph.current,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      interactive: {\n        elementMove: false\n      }\n    });\n    renderDiagram();\n    calculateCompletionPercentage();\n    return () => {\n      graph.current.off('element:pointerdown');\n    };\n  }, []);\n  const renderDiagram = () => {\n    graph.current.clear();\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100 + subjectIndex * 200, 50); // Adjusted position for side by side\n      subjectElement.resize(150, 50);\n      subjectElement.attr({\n        body: {\n          fill: '#007bff',\n          stroke: '#0056b3',\n          strokeWidth: 2\n        },\n        label: {\n          text: subject.name,\n          fill: 'white',\n          fontSize: 14\n        }\n      });\n      subjectElement.attr('element', {\n        draggable: false\n      });\n      subjectElement.addTo(graph.current);\n      let currentY = 150; // Start Y position for topics\n      subject.topics.forEach(topic => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(100 + subjectIndex * 200, currentY); // Align topic under respective subject\n        topicElement.resize(120, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? '#28a745' : '#dc3545'\n          },\n          label: {\n            text: topic.name,\n            fill: 'white',\n            fontSize: 12\n          }\n        });\n        topicElement.addTo(graph.current);\n        topicElement.attr('element', {\n          draggable: false\n        });\n        const link = new joint.shapes.standard.Link();\n        link.set('source', {\n          id: subjectElement.id\n        });\n        link.set('target', {\n          id: topicElement.id\n        });\n        link.addTo(graph.current);\n        link.attr({\n          line: {\n            stroke: '#333',\n            strokeWidth: 2,\n            targetMarker: {\n              type: 'arrow',\n              width: 10,\n              height: 10\n            }\n          }\n        });\n        link.set('router', {\n          name: 'manhattan',\n          args: {\n            padding: 10\n          }\n        });\n        currentY += 60; // Adjusted Y position for the next topic\n      });\n    });\n  };\n  const calculateCompletionPercentage = () => {\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.filter(topic => topic.completed).length;\n    }, 0);\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.length;\n    }, 0);\n    setCompletionPercentage(completedTopics / totalTopics * 100 || 0);\n  };\n  const addSubject = () => {\n    if (newSubject.trim() !== '') {\n      const updatedRoadmapData = {\n        ...roadmapData,\n        subjects: [...roadmapData.subjects, {\n          id: uuidv4(),\n          name: newSubject,\n          topics: []\n        }]\n      };\n      setRoadmapData(updatedRoadmapData);\n      setNewSubject('');\n    } else {\n      alert('Please enter a subject name.');\n    }\n  };\n  const deleteSubject = subjectId => {\n    const updatedRoadmapData = {\n      ...roadmapData,\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId)\n    };\n    setRoadmapData(updatedRoadmapData);\n    setSelectedSubjectId('');\n  };\n  const addTopic = () => {\n    if (newTopic.trim() !== '' && selectedSubjectId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      const subjectToUpdate = updatedRoadmapData.subjects.find(subject => subject.id === selectedSubjectId);\n      if (subjectToUpdate) {\n        const topicId = uuidv4();\n        subjectToUpdate.topics.push({\n          id: topicId,\n          name: newTopic,\n          completed: false\n        });\n        setRoadmapData(updatedRoadmapData);\n        setNewTopic('');\n        renderDiagram();\n      } else {\n        alert('Subject not found.');\n      }\n    } else {\n      alert('Please enter a topic name and select a subject.');\n    }\n  };\n  const markAsCompleted = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          topicToUpdate.completed = !topicToUpdate.completed;\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    calculateCompletionPercentage();\n  };\n  const editTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\n          if (newName && newName.trim() !== '') {\n            topicToUpdate.name = newName.trim();\n          }\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n  };\n  const deleteTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        subject.topics = subject.topics.filter(t => t.id !== topicId);\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    calculateCompletionPercentage();\n  };\n  useEffect(() => {\n    if (graph.current) {\n      renderDiagram();\n    }\n  }, [roadmapData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roadmap-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subject-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubject,\n        onChange: e => setNewSubject(e.target.value),\n        placeholder: \"Subject Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSubject,\n        children: \"Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"subject-item\",\n          children: [subject.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteSubject(subject.id),\n            className: \"delete-button\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, subject.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topic-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubjectId(e.target.value),\n        value: selectedSubjectId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subject.id,\n          children: subject.name\n        }, subject.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTopic,\n        onChange: e => setNewTopic(e.target.value),\n        placeholder: \"Topic Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTopic,\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: paperContainer,\n      className: \"diagram-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Manage Topics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), selectedSubjectId && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_roadmapData$subjects = roadmapData.subjects.find(subject => subject.id === selectedSubjectId)) === null || _roadmapData$subjects === void 0 ? void 0 : _roadmapData$subjects.topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"topic-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: topic.completed ? 'completed' : '',\n            children: topic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"topic-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => markAsCompleted(topic.id),\n              className: \"action-button\",\n              children: [\"Mark as \", topic.completed ? 'Incomplete' : 'Completed']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editTopic(topic.id),\n              className: \"action-button\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTopic(topic.id),\n              className: \"action-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)]\n        }, topic.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completion-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completion-fill\",\n        style: {\n          width: `${completionPercentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completion-percentage\",\n      children: [Math.round(completionPercentage), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"YYiBufMuied5EDqcF3FwBmNPaSg=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","joint","v4","uuidv4","jsxDEV","_jsxDEV","RoadmapView","_s","_roadmapData$subjects","paperContainer","graph","roadmapData","setRoadmapData","subjects","newSubject","setNewSubject","newTopic","setNewTopic","selectedSubjectId","setSelectedSubjectId","completionPercentage","setCompletionPercentage","current","dia","Graph","paper","Paper","el","model","width","height","gridSize","interactive","elementMove","renderDiagram","calculateCompletionPercentage","off","clear","forEach","subject","subjectIndex","subjectElement","shapes","standard","Rectangle","position","resize","attr","body","fill","stroke","strokeWidth","label","text","name","fontSize","draggable","addTo","currentY","topics","topic","topicElement","completed","link","Link","set","id","line","targetMarker","type","args","padding","completedTopics","reduce","total","filter","length","totalTopics","addSubject","trim","updatedRoadmapData","alert","deleteSubject","subjectId","addTopic","subjectToUpdate","find","topicId","push","markAsCompleted","topicToUpdate","t","editTopic","newName","prompt","deleteTopic","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","ref","style","Math","round","_c","$RefreshReg$"],"sources":["C:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport * as joint from '@joint/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './RoadmapView.css'; // Import the CSS for styling\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const graph = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState({ subjects: [] });\r\n  const [newSubject, setNewSubject] = useState('');\r\n  const [newTopic, setNewTopic] = useState('');\r\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    graph.current = new joint.dia.Graph();\r\n    const paper = new joint.dia.Paper({\r\n      el: paperContainer.current,\r\n      model: graph.current,\r\n      width: 800,\r\n      height: 600,\r\n      gridSize: 1,\r\n      interactive: { elementMove: false },\r\n    });\r\n\r\n    renderDiagram();\r\n    calculateCompletionPercentage();\r\n\r\n    return () => {\r\n      graph.current.off('element:pointerdown');\r\n    };\r\n  }, []);\r\n\r\n  const renderDiagram = () => {\r\n    graph.current.clear();\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100 + subjectIndex * 200, 50); // Adjusted position for side by side\r\n      subjectElement.resize(150, 50);\r\n      subjectElement.attr({\r\n        body: { fill: '#007bff', stroke: '#0056b3', strokeWidth: 2 },\r\n        label: { text: subject.name, fill: 'white', fontSize: 14 },\r\n      });\r\n\r\n      subjectElement.attr('element', { draggable: false });\r\n      subjectElement.addTo(graph.current);\r\n\r\n      let currentY = 150; // Start Y position for topics\r\n      subject.topics.forEach((topic) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(100 + subjectIndex * 200, currentY); // Align topic under respective subject\r\n        topicElement.resize(120, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? '#28a745' : '#dc3545' },\r\n          label: { text: topic.name, fill: 'white', fontSize: 12 },\r\n        });\r\n\r\n        topicElement.addTo(graph.current);\r\n        topicElement.attr('element', { draggable: false });\r\n\r\n        const link = new joint.shapes.standard.Link();\r\n        link.set('source', { id: subjectElement.id });\r\n        link.set('target', { id: topicElement.id });\r\n        link.addTo(graph.current);\r\n        link.attr({ line: { stroke: '#333', strokeWidth: 2, targetMarker: { type: 'arrow', width: 10, height: 10 } } });\r\n        link.set('router', { name: 'manhattan', args: { padding: 10 } });\r\n\r\n        currentY += 60; // Adjusted Y position for the next topic\r\n      });\r\n    });\r\n  };\r\n\r\n  const calculateCompletionPercentage = () => {\r\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.filter(topic => topic.completed).length;\r\n    }, 0);\r\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.length;\r\n    }, 0);\r\n    setCompletionPercentage((completedTopics / totalTopics) * 100 || 0);\r\n  };\r\n\r\n  const addSubject = () => {\r\n    if (newSubject.trim() !== '') {\r\n      const updatedRoadmapData = {\r\n        ...roadmapData,\r\n        subjects: [\r\n          ...roadmapData.subjects,\r\n          {\r\n            id: uuidv4(),\r\n            name: newSubject,\r\n            topics: [],\r\n          },\r\n        ],\r\n      };\r\n      setRoadmapData(updatedRoadmapData);\r\n      setNewSubject('');\r\n    } else {\r\n      alert('Please enter a subject name.');\r\n    }\r\n  };\r\n\r\n  const deleteSubject = (subjectId) => {\r\n    const updatedRoadmapData = {\r\n      ...roadmapData,\r\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId),\r\n    };\r\n    setRoadmapData(updatedRoadmapData);\r\n    setSelectedSubjectId('');\r\n  };\r\n\r\n  const addTopic = () => {\r\n    if (newTopic.trim() !== '' && selectedSubjectId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      const subjectToUpdate = updatedRoadmapData.subjects.find(\r\n        (subject) => subject.id === selectedSubjectId\r\n      );\r\n      if (subjectToUpdate) {\r\n        const topicId = uuidv4();\r\n        subjectToUpdate.topics.push({\r\n          id: topicId,\r\n          name: newTopic,\r\n          completed: false,\r\n        });\r\n        setRoadmapData(updatedRoadmapData);\r\n        setNewTopic('');\r\n        renderDiagram();\r\n      } else {\r\n        alert('Subject not found.');\r\n      }\r\n    } else {\r\n      alert('Please enter a topic name and select a subject.');\r\n    }\r\n  };\r\n\r\n  const markAsCompleted = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          topicToUpdate.completed = !topicToUpdate.completed;\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  const editTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\r\n          if (newName && newName.trim() !== '') {\r\n            topicToUpdate.name = newName.trim();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n  };\r\n\r\n  const deleteTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        subject.topics = subject.topics.filter((t) => t.id !== topicId);\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graph.current) {\r\n      renderDiagram();\r\n    }\r\n  }, [roadmapData]);\r\n\r\n  return (\r\n    <div className=\"roadmap-container\">\r\n      <div className=\"subject-container\">\r\n        <h3>Add New Subject</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newSubject}\r\n          onChange={(e) => setNewSubject(e.target.value)}\r\n          placeholder=\"Subject Name\"\r\n        />\r\n        <button onClick={addSubject}>Add Subject</button>\r\n        <h3>Existing Subjects</h3>\r\n        <ul>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <li key={subject.id} className=\"subject-item\">\r\n              {subject.name}\r\n              <button onClick={() => deleteSubject(subject.id)} className=\"delete-button\">Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"topic-container\">\r\n        <h3>Add New Topic</h3>\r\n        <select\r\n          onChange={(e) => setSelectedSubjectId(e.target.value)}\r\n          value={selectedSubjectId}\r\n        >\r\n          <option value=\"\">Select Subject</option>\r\n          {roadmapData.subjects.map((subject) => (\r\n            <option key={subject.id} value={subject.id}>\r\n              {subject.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={newTopic}\r\n          onChange={(e) => setNewTopic(e.target.value)}\r\n          placeholder=\"Topic Name\"\r\n        />\r\n        <button onClick={addTopic}>Add Topic</button>\r\n      </div>\r\n\r\n      <div ref={paperContainer} className=\"diagram-container\" />\r\n\r\n      <div className=\"manage-container\">\r\n        <h3>Manage Topics</h3>\r\n        {selectedSubjectId && (\r\n          <ul>\r\n            {roadmapData.subjects.find((subject) => subject.id === selectedSubjectId)?.topics.map((topic) => (\r\n              <li key={topic.id} className=\"topic-item\">\r\n                <span className={topic.completed ? 'completed' : ''}>\r\n                  {topic.name}\r\n                </span>\r\n                <div className=\"topic-actions\">\r\n                  <button onClick={() => markAsCompleted(topic.id)} className=\"action-button\">\r\n                    Mark as {topic.completed ? 'Incomplete' : 'Completed'}\r\n                  </button>\r\n                  <button onClick={() => editTopic(topic.id)} className=\"action-button\">Edit</button>\r\n                  <button onClick={() => deleteTopic(topic.id)} className=\"action-button\">Delete</button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"completion-bar\">\r\n        <div\r\n          className=\"completion-fill\"\r\n          style={{ width: `${completionPercentage}%` }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"completion-percentage\">{Math.round(completionPercentage)}%</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}