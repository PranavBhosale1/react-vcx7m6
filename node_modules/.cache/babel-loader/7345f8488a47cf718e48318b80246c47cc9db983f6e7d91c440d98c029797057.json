{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-vcx7m6\\\\src\\\\components\\\\RoadmapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as joint from '@joint/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport './RoadmapView.css'; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoadmapView() {\n  _s();\n  var _roadmapData$subjects;\n  const paperContainer = useRef(null);\n  const graph = useRef(null);\n  const [roadmapData, setRoadmapData] = useState({\n    subjects: []\n  });\n  const [newSubject, setNewSubject] = useState('');\n  const [newTopic, setNewTopic] = useState('');\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n  useEffect(() => {\n    graph.current = new joint.dia.Graph();\n    const paper = new joint.dia.Paper({\n      el: paperContainer.current,\n      model: graph.current,\n      width: 800,\n      height: 600,\n      gridSize: 1,\n      interactive: {\n        elementMove: false\n      }\n    });\n    renderDiagram();\n    calculateCompletionPercentage();\n    return () => {\n      graph.current.off('element:pointerdown');\n    };\n  }, []);\n  const renderDiagram = () => {\n    graph.current.clear();\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\n      const subjectElement = new joint.shapes.standard.Rectangle();\n      subjectElement.position(100, 100 + subjectIndex * 150);\n      subjectElement.resize(150, 50); // Increased width for better visibility\n      subjectElement.attr({\n        body: {\n          fill: '#007bff',\n          stroke: '#0056b3',\n          strokeWidth: 2\n        },\n        // Styling\n        label: {\n          text: subject.name,\n          fill: 'white',\n          fontSize: 14\n        }\n      });\n      subjectElement.attr('element', {\n        draggable: false\n      });\n      subjectElement.addTo(graph.current);\n      let currentY = 150 + subjectIndex * 150;\n      subject.topics.forEach((topic, topicIndex) => {\n        const topicElement = new joint.shapes.standard.Rectangle();\n        topicElement.position(300, currentY);\n        topicElement.resize(120, 40);\n        topicElement.attr({\n          body: {\n            fill: topic.completed ? '#28a745' : '#dc3545'\n          },\n          // Conditional styling\n          label: {\n            text: topic.name,\n            fill: 'white',\n            fontSize: 12\n          }\n        });\n        topicElement.addTo(graph.current);\n        topicElement.attr('element', {\n          draggable: false\n        });\n        const link = new joint.shapes.standard.Link();\n        if (topicIndex === 0) {\n          link.source(subjectElement);\n        } else {\n          const previousTopicElement = graph.current.getCell(roadmapData.subjects[subjectIndex].topics[topicIndex - 1].id);\n          link.source(previousTopicElement);\n        }\n        link.target(topicElement);\n        link.addTo(graph.current);\n        link.attr({\n          line: {\n            stroke: '#007bff',\n            strokeWidth: 2,\n            strokeDasharray: '5, 5',\n            // Optional dashed line\n            sourceMarker: {\n              type: 'path',\n              d: 'M 0 -5 0 5 5 0 Z',\n              // Arrow shape\n              fill: '#007bff'\n            },\n            targetMarker: {\n              type: 'path',\n              d: 'M 0 -5 0 5 5 0 Z',\n              // Arrow shape\n              fill: '#007bff'\n            }\n          }\n        });\n        currentY += 60; // Space between topics\n      });\n    });\n  };\n  const calculateCompletionPercentage = () => {\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.filter(topic => topic.completed).length;\n    }, 0);\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\n      return total + subject.topics.length;\n    }, 0);\n    setCompletionPercentage(completedTopics / totalTopics * 100 || 0);\n  };\n  const addSubject = () => {\n    if (newSubject.trim() !== '') {\n      const updatedRoadmapData = {\n        ...roadmapData,\n        subjects: [...roadmapData.subjects, {\n          id: uuidv4(),\n          name: newSubject,\n          topics: []\n        }]\n      };\n      setRoadmapData(updatedRoadmapData);\n      setNewSubject('');\n    } else {\n      alert('Please enter a subject name.');\n    }\n  };\n  const deleteSubject = subjectId => {\n    const updatedRoadmapData = {\n      ...roadmapData,\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId)\n    };\n    setRoadmapData(updatedRoadmapData);\n    setSelectedSubjectId('');\n  };\n  const addTopic = () => {\n    if (newTopic.trim() !== '' && selectedSubjectId) {\n      const updatedRoadmapData = {\n        ...roadmapData\n      };\n      const subjectToUpdate = updatedRoadmapData.subjects.find(subject => subject.id === selectedSubjectId);\n      if (subjectToUpdate) {\n        const topicId = uuidv4();\n        subjectToUpdate.topics.push({\n          id: topicId,\n          name: newTopic,\n          completed: false\n        });\n        setRoadmapData(updatedRoadmapData);\n        setNewTopic('');\n        renderDiagram();\n      } else {\n        alert('Subject not found.');\n      }\n    } else {\n      alert('Please enter a topic name and select a subject.');\n    }\n  };\n  const markAsCompleted = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          topicToUpdate.completed = !topicToUpdate.completed;\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    calculateCompletionPercentage();\n  };\n  const editTopic = topicId => {\n    const updatedRoadmapData = {\n      ...roadmapData\n    };\n    updatedRoadmapData.subjects.forEach(subject => {\n      if (subject.id === selectedSubjectId) {\n        const topicToUpdate = subject.topics.find(t => t.id === topicId);\n        if (topicToUpdate) {\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\n          if (newName && newName.trim() !== '') {\n            topicToUpdate.name = newName;\n          }\n        }\n      }\n    });\n    setRoadmapData(updatedRoadmapData);\n    renderDiagram();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roadmap-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subject-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubject,\n        onChange: e => setNewSubject(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: addSubject,\n        children: \"Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), roadmapData.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subject-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: subject.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topic-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => deleteSubject(subject.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            onClick: () => setSelectedSubjectId(subject.id),\n            children: \"Manage Topics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, subject.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), selectedSubjectId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topic-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Topic to Selected Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTopic,\n        onChange: e => setNewTopic(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: addTopic,\n        children: \"Add Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Topics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), (_roadmapData$subjects = roadmapData.subjects.find(subject => subject.id === selectedSubjectId)) === null || _roadmapData$subjects === void 0 ? void 0 : _roadmapData$subjects.topics.map(topic => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: topic.completed ? 'completed' : '',\n          children: topic.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topic-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            onClick: () => markAsCompleted(topic.id),\n            children: topic.completed ? 'Undo' : 'Complete'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            onClick: () => editTopic(topic.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this)]\n      }, topic.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diagram-container\",\n      ref: paperContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completion-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completion-percentage\",\n        children: [\"Completion: \", completionPercentage.toFixed(0), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completion-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"completion-fill\",\n          style: {\n            width: `${completionPercentage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s(RoadmapView, \"InqTr0aSQn0KIAnXN2WGvyHdqsU=\");\n_c = RoadmapView;\nexport default RoadmapView;\nvar _c;\n$RefreshReg$(_c, \"RoadmapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","joint","v4","uuidv4","jsxDEV","_jsxDEV","RoadmapView","_s","_roadmapData$subjects","paperContainer","graph","roadmapData","setRoadmapData","subjects","newSubject","setNewSubject","newTopic","setNewTopic","selectedSubjectId","setSelectedSubjectId","completionPercentage","setCompletionPercentage","current","dia","Graph","paper","Paper","el","model","width","height","gridSize","interactive","elementMove","renderDiagram","calculateCompletionPercentage","off","clear","forEach","subject","subjectIndex","subjectElement","shapes","standard","Rectangle","position","resize","attr","body","fill","stroke","strokeWidth","label","text","name","fontSize","draggable","addTo","currentY","topics","topic","topicIndex","topicElement","completed","link","Link","source","previousTopicElement","getCell","id","target","line","strokeDasharray","sourceMarker","type","d","targetMarker","completedTopics","reduce","total","filter","length","totalTopics","addSubject","trim","updatedRoadmapData","alert","deleteSubject","subjectId","addTopic","subjectToUpdate","find","topicId","push","markAsCompleted","topicToUpdate","t","editTopic","newName","prompt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","onClick","map","ref","toFixed","style","_c","$RefreshReg$"],"sources":["C:/react-vcx7m6/src/components/RoadmapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport * as joint from '@joint/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './RoadmapView.css'; // Import the CSS for styling\r\n\r\nfunction RoadmapView() {\r\n  const paperContainer = useRef(null);\r\n  const graph = useRef(null);\r\n  const [roadmapData, setRoadmapData] = useState({ subjects: [] });\r\n  const [newSubject, setNewSubject] = useState('');\r\n  const [newTopic, setNewTopic] = useState('');\r\n  const [selectedSubjectId, setSelectedSubjectId] = useState('');\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    graph.current = new joint.dia.Graph();\r\n    const paper = new joint.dia.Paper({\r\n      el: paperContainer.current,\r\n      model: graph.current,\r\n      width: 800,\r\n      height: 600,\r\n      gridSize: 1,\r\n      interactive: { elementMove: false },\r\n    });\r\n\r\n    renderDiagram();\r\n    calculateCompletionPercentage();\r\n\r\n    return () => {\r\n      graph.current.off('element:pointerdown');\r\n    };\r\n  }, []);\r\n\r\n  const renderDiagram = () => {\r\n    graph.current.clear();\r\n    roadmapData.subjects.forEach((subject, subjectIndex) => {\r\n      const subjectElement = new joint.shapes.standard.Rectangle();\r\n      subjectElement.position(100, 100 + subjectIndex * 150);\r\n      subjectElement.resize(150, 50); // Increased width for better visibility\r\n      subjectElement.attr({\r\n        body: { fill: '#007bff', stroke: '#0056b3', strokeWidth: 2 }, // Styling\r\n        label: { text: subject.name, fill: 'white', fontSize: 14 },\r\n      });\r\n\r\n      subjectElement.attr('element', { draggable: false });\r\n      subjectElement.addTo(graph.current);\r\n\r\n      let currentY = 150 + subjectIndex * 150;\r\n      subject.topics.forEach((topic, topicIndex) => {\r\n        const topicElement = new joint.shapes.standard.Rectangle();\r\n        topicElement.position(300, currentY);\r\n        topicElement.resize(120, 40);\r\n        topicElement.attr({\r\n          body: { fill: topic.completed ? '#28a745' : '#dc3545' }, // Conditional styling\r\n          label: { text: topic.name, fill: 'white', fontSize: 12 },\r\n        });\r\n\r\n        topicElement.addTo(graph.current);\r\n        topicElement.attr('element', { draggable: false });\r\n\r\n        const link = new joint.shapes.standard.Link();\r\n        if (topicIndex === 0) {\r\n          link.source(subjectElement);\r\n        } else {\r\n          const previousTopicElement = graph.current.getCell(roadmapData.subjects[subjectIndex].topics[topicIndex - 1].id);\r\n          link.source(previousTopicElement);\r\n        }\r\n        link.target(topicElement);\r\n        link.addTo(graph.current);\r\n        link.attr({\r\n          line: {\r\n            stroke: '#007bff',\r\n            strokeWidth: 2,\r\n            strokeDasharray: '5, 5', // Optional dashed line\r\n            sourceMarker: {\r\n              type: 'path',\r\n              d: 'M 0 -5 0 5 5 0 Z', // Arrow shape\r\n              fill: '#007bff',\r\n            },\r\n            targetMarker: {\r\n              type: 'path',\r\n              d: 'M 0 -5 0 5 5 0 Z', // Arrow shape\r\n              fill: '#007bff',\r\n            },\r\n          },\r\n        });\r\n\r\n        currentY += 60; // Space between topics\r\n      });\r\n    });\r\n  };\r\n\r\n  const calculateCompletionPercentage = () => {\r\n    const completedTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.filter(topic => topic.completed).length;\r\n    }, 0);\r\n    const totalTopics = roadmapData.subjects.reduce((total, subject) => {\r\n      return total + subject.topics.length;\r\n    }, 0);\r\n    setCompletionPercentage((completedTopics / totalTopics) * 100 || 0);\r\n  };\r\n\r\n  const addSubject = () => {\r\n    if (newSubject.trim() !== '') {\r\n      const updatedRoadmapData = {\r\n        ...roadmapData,\r\n        subjects: [\r\n          ...roadmapData.subjects,\r\n          {\r\n            id: uuidv4(),\r\n            name: newSubject,\r\n            topics: [],\r\n          },\r\n        ],\r\n      };\r\n      setRoadmapData(updatedRoadmapData);\r\n      setNewSubject('');\r\n    } else {\r\n      alert('Please enter a subject name.');\r\n    }\r\n  };\r\n\r\n  const deleteSubject = (subjectId) => {\r\n    const updatedRoadmapData = {\r\n      ...roadmapData,\r\n      subjects: roadmapData.subjects.filter(subject => subject.id !== subjectId),\r\n    };\r\n    setRoadmapData(updatedRoadmapData);\r\n    setSelectedSubjectId('');\r\n  };\r\n\r\n  const addTopic = () => {\r\n    if (newTopic.trim() !== '' && selectedSubjectId) {\r\n      const updatedRoadmapData = { ...roadmapData };\r\n      const subjectToUpdate = updatedRoadmapData.subjects.find(\r\n        (subject) => subject.id === selectedSubjectId\r\n      );\r\n      if (subjectToUpdate) {\r\n        const topicId = uuidv4();\r\n        subjectToUpdate.topics.push({\r\n          id: topicId,\r\n          name: newTopic,\r\n          completed: false,\r\n        });\r\n        setRoadmapData(updatedRoadmapData);\r\n        setNewTopic('');\r\n        renderDiagram();\r\n      } else {\r\n        alert('Subject not found.');\r\n      }\r\n    } else {\r\n      alert('Please enter a topic name and select a subject.');\r\n    }\r\n  };\r\n\r\n  const markAsCompleted = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          topicToUpdate.completed = !topicToUpdate.completed;\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    calculateCompletionPercentage();\r\n  };\r\n\r\n  const editTopic = (topicId) => {\r\n    const updatedRoadmapData = { ...roadmapData };\r\n    updatedRoadmapData.subjects.forEach((subject) => {\r\n      if (subject.id === selectedSubjectId) {\r\n        const topicToUpdate = subject.topics.find((t) => t.id === topicId);\r\n        if (topicToUpdate) {\r\n          const newName = prompt('Edit topic name:', topicToUpdate.name);\r\n          if (newName && newName.trim() !== '') {\r\n            topicToUpdate.name = newName;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setRoadmapData(updatedRoadmapData);\r\n    renderDiagram();\r\n  };\r\n\r\n  return (\r\n    <div className=\"roadmap-container\">\r\n      <div className=\"subject-container\">\r\n        <h3>Add New Subject</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={newSubject}\r\n          onChange={(e) => setNewSubject(e.target.value)}\r\n        />\r\n        <button className=\"action-button\" onClick={addSubject}>Add Subject</button>\r\n        {roadmapData.subjects.map((subject) => (\r\n          <div key={subject.id} className=\"subject-item\">\r\n            <span>{subject.name}</span>\r\n            <div className=\"topic-actions\">\r\n              <button className=\"delete-button\" onClick={() => deleteSubject(subject.id)}>Delete</button>\r\n              <button className=\"action-button\" onClick={() => setSelectedSubjectId(subject.id)}>Manage Topics</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {selectedSubjectId && (\r\n        <div className=\"topic-container\">\r\n          <h3>Add New Topic to Selected Subject</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={newTopic}\r\n            onChange={(e) => setNewTopic(e.target.value)}\r\n          />\r\n          <button className=\"action-button\" onClick={addTopic}>Add Topic</button>\r\n          <h4>Topics</h4>\r\n          {roadmapData.subjects.find(subject => subject.id === selectedSubjectId)?.topics.map((topic) => (\r\n            <div key={topic.id} className=\"topic-item\">\r\n              <span className={topic.completed ? 'completed' : ''}>{topic.name}</span>\r\n              <div className=\"topic-actions\">\r\n                <button className=\"action-button\" onClick={() => markAsCompleted(topic.id)}>\r\n                  {topic.completed ? 'Undo' : 'Complete'}\r\n                </button>\r\n                <button className=\"action-button\" onClick={() => editTopic(topic.id)}>Edit</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"diagram-container\" ref={paperContainer}></div>\r\n      <div className=\"completion-bar\">\r\n        <div className=\"completion-percentage\">Completion: {completionPercentage.toFixed(0)}%</div>\r\n        <div className=\"completion-bar\">\r\n          <div className=\"completion-fill\" style={{ width: `${completionPercentage}%` }}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoadmapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}